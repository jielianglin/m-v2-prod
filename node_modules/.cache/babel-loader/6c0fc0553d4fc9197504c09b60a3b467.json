{"ast":null,"code":"var _jsxFileName = \"/Users/jielianglin/Desktop/projects/m-v2-prod/src/components/upload/annotation/P5Lasso.js\";\nimport React from 'react';\nimport ColorSelector from './ColorSelector';\nimport Sketch from 'react-p5';\nimport Sample from './sample/Sample.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet penSize = 5;\nlet penState = 0;\nlet init;\nvar x, y, px, py;\nvar paths = [];\nvar currentPath = [];\nlet img;\nlet pg;\nexport default function Vector() {\n  const preload = p5 => {\n    img = p5.loadImage(`${Sample}`);\n  };\n\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(600, 600).parent(canvasParentRef);\n    pg = p5.createGraphics(600, 600);\n  };\n\n  const draw = p5 => {\n    x = p5.mouseX;\n    y = p5.mouseY;\n    px = p5.pmouseX;\n    py = p5.pmouseY;\n    p5.image(img, 0, 0);\n    pg.strokeWeight(penSize);\n\n    if (p5.mouseIsPressed) {\n      if (penState === 0) {\n        pg.stroke(c);\n        pg.line(x, y, px, py);\n        currentPath.push([x, y]);\n        init = currentPath[0];\n        console.log(init);\n      }\n    }\n\n    p5.image(pg, 0, 0);\n\n    /*#__PURE__*/\n    _jsxDEV(ColorSelector, {\n      c: c\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  };\n\n  const mouseReleased = () => {\n    pg.line(x, y, ...init);\n    currentPath = [];\n    paths.push(currentPath);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Sketch, {\n    preload: preload,\n    setup: setup,\n    draw: draw,\n    mouseReleased: mouseReleased\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 13\n  }, this);\n}\n_c = Vector;\n\nvar _c;\n\n$RefreshReg$(_c, \"Vector\");","map":{"version":3,"sources":["/Users/jielianglin/Desktop/projects/m-v2-prod/src/components/upload/annotation/P5Lasso.js"],"names":["React","ColorSelector","Sketch","Sample","penSize","penState","init","x","y","px","py","paths","currentPath","img","pg","Vector","preload","p5","loadImage","setup","canvasParentRef","createCanvas","parent","createGraphics","draw","mouseX","mouseY","pmouseX","pmouseY","image","strokeWeight","mouseIsPressed","stroke","c","line","push","console","log","mouseReleased"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,IAAIC,OAAO,GAAG,CAAd;AACA,IAAIC,QAAQ,GAAG,CAAf;AAEA,IAAIC,IAAJ;AACA,IAAIC,CAAJ,EAAOC,CAAP,EAAUC,EAAV,EAAcC,EAAd;AACA,IAAIC,KAAK,GAAG,EAAZ;AACA,IAAIC,WAAW,GAAG,EAAlB;AAEA,IAAIC,GAAJ;AACA,IAAIC,EAAJ;AAMA,eAAe,SAASC,MAAT,GAAiB;AAE5B,QAAMC,OAAO,GAAGC,EAAE,IAAI;AACtBJ,IAAAA,GAAG,GAAGI,EAAE,CAACC,SAAH,CAAc,GAAEf,MAAO,EAAvB,CAAN;AACC,GAFD;;AAIA,QAAMgB,KAAK,GAAG,CAACF,EAAD,EAAKG,eAAL,KAAyB;AACnCH,IAAAA,EAAE,CAACI,YAAH,CAAgB,GAAhB,EAAoB,GAApB,EAAyBC,MAAzB,CAAgCF,eAAhC;AACAN,IAAAA,EAAE,GAAGG,EAAE,CAACM,cAAH,CAAkB,GAAlB,EAAuB,GAAvB,CAAL;AACH,GAHD;;AAKA,QAAMC,IAAI,GAAGP,EAAE,IAAI;AACfV,IAAAA,CAAC,GAAGU,EAAE,CAACQ,MAAP;AACAjB,IAAAA,CAAC,GAAGS,EAAE,CAACS,MAAP;AACAjB,IAAAA,EAAE,GAAGQ,EAAE,CAACU,OAAR;AACAjB,IAAAA,EAAE,GAAGO,EAAE,CAACW,OAAR;AAGAX,IAAAA,EAAE,CAACY,KAAH,CAAShB,GAAT,EAAc,CAAd,EAAiB,CAAjB;AACAC,IAAAA,EAAE,CAACgB,YAAH,CAAgB1B,OAAhB;;AAGI,QAAIa,EAAE,CAACc,cAAP,EAAsB;AACd,UAAI1B,QAAQ,KAAK,CAAjB,EAAmB;AACnBS,QAAAA,EAAE,CAACkB,MAAH,CAAUC,CAAV;AACAnB,QAAAA,EAAE,CAACoB,IAAH,CAAQ3B,CAAR,EAAWC,CAAX,EAAcC,EAAd,EAAkBC,EAAlB;AACAE,QAAAA,WAAW,CAACuB,IAAZ,CAAiB,CAAC5B,CAAD,EAAIC,CAAJ,CAAjB;AACAF,QAAAA,IAAI,GAAGM,WAAW,CAAC,CAAD,CAAlB;AACAwB,QAAAA,OAAO,CAACC,GAAR,CAAY/B,IAAZ;AACH;AACJ;;AACDW,IAAAA,EAAE,CAACY,KAAH,CAASf,EAAT,EAAa,CAAb,EAAgB,CAAhB;;AACA;AAAA,YAAC,aAAD;AAAe,MAAA,CAAC,EAAEmB;AAAlB;AAAA;AAAA;AAAA;AAAA;AACP,GAtBD;;AAwBA,QAAMK,aAAa,GAAG,MAAM;AACxBxB,IAAAA,EAAE,CAACoB,IAAH,CAAQ3B,CAAR,EAAWC,CAAX,EAAc,GAAGF,IAAjB;AACAM,IAAAA,WAAW,GAAG,EAAd;AACAD,IAAAA,KAAK,CAACwB,IAAN,CAAWvB,WAAX;AACH,GAJD;;AAMC,sBAAO,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEI,OAAjB;AAA0B,IAAA,KAAK,EAAEG,KAAjC;AAAwC,IAAA,IAAI,EAAEK,IAA9C;AAAoD,IAAA,aAAa,EAAEc;AAAnE;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;KA1CmBvB,M","sourcesContent":["import React from 'react'; \nimport ColorSelector from './ColorSelector'; \nimport Sketch from 'react-p5';\nimport Sample from './sample/Sample.jpg';\n\nlet penSize = 5;\nlet penState = 0;\n\nlet init; \nvar x, y, px, py;\nvar paths = [];\nvar currentPath = [];\n\nlet img; \nlet pg; \n\n\n\n\n\nexport default function Vector(){\n\n    const preload = p5 => {\n    img = p5.loadImage(`${Sample}`);\n    }\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(600,600).parent(canvasParentRef);\n        pg = p5.createGraphics(600, 600);     \n    }\n\n    const draw = p5 => {\n        x = p5.mouseX;\n        y = p5.mouseY;\n        px = p5.pmouseX;\n        py = p5.pmouseY;\n\n\n        p5.image(img, 0, 0);\n        pg.strokeWeight(penSize); \n    \n        \n            if (p5.mouseIsPressed){\n                    if (penState === 0){\n                    pg.stroke(c); \n                    pg.line(x, y, px, py);\n                    currentPath.push([x, y]); \n                    init = currentPath[0]; \n                    console.log(init);\n                }\n            }\n            p5.image(pg, 0, 0);\n            <ColorSelector c={c} />\n    }\n\n    const mouseReleased = () => { \n        pg.line(x, y, ...init); \n        currentPath = []; \n        paths.push(currentPath); \n    }\n\n     return <Sketch preload={preload} setup={setup} draw={draw} mouseReleased={mouseReleased}/>  \n    }"]},"metadata":{},"sourceType":"module"}