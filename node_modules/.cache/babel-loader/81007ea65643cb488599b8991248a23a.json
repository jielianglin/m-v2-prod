{"ast":null,"code":"var _jsxFileName = \"/Users/jielianglin/Desktop/projects/m-v2-prod/src/pages/home/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport UploadButton from \"../../components/upload/uploadButton/UploadButton\";\nimport ExploreButton from \"../../components/explore/exploreButton/ExploreButton\";\nimport ExploreMode from \"./ExploreMode\";\nimport IntroText from \"../../components/IntroText\";\nimport { useSpring, animated } from \"react-spring\";\nimport testimage1 from \"./testimage1/testimage1.png\";\nimport testimage2 from \"./testimage2/testimage2.png\";\nimport testimage3 from \"./testimage3/testimage3.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction shuffle(arra1) {\n  var ctr = arra1.length,\n      temp,\n      index;\n\n  while (ctr > 0) {\n    index = Math.floor(Math.random() * ctr);\n    ctr--;\n    temp = arra1[ctr];\n    arra1[ctr] = arra1[index];\n    arra1[index] = temp;\n  }\n\n  return arra1;\n}\n\nexport default function Gallery() {\n  _s();\n\n  const classes = useStyles();\n  const [galleryMode, exploreMode] = React.useState(false);\n  const [mount, setMount] = React.useState(false);\n  const [seconds, setSeconds] = React.useState(5);\n  const foo = React.useRef();\n  const [list, setList] = React.useState([]);\n  const [toggle, setToggle] = React.useState(false);\n  const [count, setCount] = React.useState(0);\n  const fooTwo = React.useRef();\n\n  const changeMode = () => {\n    exploreMode(true);\n  };\n\n  const props = useSpring({\n    opacity: toggle ? 1 : 0\n  });\n  const items = [/*#__PURE__*/_jsxDEV(UploadButton, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    elevation: 0\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n    src: testimage2,\n    alt: \"\",\n    width: \"110px\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    elevation: 0\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n    src: testimage1,\n    alt: \"\",\n    width: \"110px\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    elevation: 0\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n    src: testimage3,\n    alt: \"\",\n    width: \"110px\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(ExploreButton, {\n    changeMode: changeMode\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }, this)];\n  const row = items.map((item, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this));\n  useEffect(() => {\n    function counter() {\n      setCount(count => count + 1);\n    }\n\n    fooTwo.current = setInterval(() => counter(), 1000);\n\n    if (count === 20) {\n      setToggle(true);\n      clearInterval(fooTwo.current);\n      const mountArray = shuffle(row);\n      setList(mountArray);\n    }\n  }, [count]);\n  useEffect(() => {\n    setMount(true);\n\n    function tick() {\n      setSeconds(prevSeconds => prevSeconds - 1);\n    }\n\n    foo.current = setInterval(() => tick(), 1000);\n  }, []);\n  useEffect(() => {\n    if (seconds === 0) {\n      clearInterval(foo.current);\n      setMount(false);\n    }\n  }, [seconds]);\n\n  if (galleryMode) {\n    return /*#__PURE__*/_jsxDEV(ExploreMode, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(animated.div, {\n        style: props,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.root,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            maxWidth: \"800px\",\n            minWidth: \"100px\",\n            margin: \"0 auto\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              display: \"flex\",\n              flexDirection: \"column\",\n              justify: \"center\",\n              alignItems: \"center\",\n              spacing: 10,\n              children: list\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Gallery, \"GzzrrA00t+Wu7g3KnFaXlhk5nYI=\", true, function () {\n  return [useSpring];\n});\n\n_c = Gallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"sources":["/Users/jielianglin/Desktop/projects/m-v2-prod/src/pages/home/Home.js"],"names":["React","useEffect","Paper","Grid","Box","UploadButton","ExploreButton","ExploreMode","IntroText","useSpring","animated","testimage1","testimage2","testimage3","shuffle","arra1","ctr","length","temp","index","Math","floor","random","Gallery","classes","useStyles","galleryMode","exploreMode","useState","mount","setMount","seconds","setSeconds","foo","useRef","list","setList","toggle","setToggle","count","setCount","fooTwo","changeMode","props","opacity","items","paper","row","map","item","counter","current","setInterval","clearInterval","mountArray","tick","prevSeconds","root"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\n\nimport UploadButton from \"../../components/upload/uploadButton/UploadButton\";\nimport ExploreButton from \"../../components/explore/exploreButton/ExploreButton\";\nimport ExploreMode from \"./ExploreMode\";\nimport IntroText from \"../../components/IntroText\";\n\nimport { useSpring, animated } from \"react-spring\";\n\nimport testimage1 from \"./testimage1/testimage1.png\";\nimport testimage2 from \"./testimage2/testimage2.png\";\nimport testimage3 from \"./testimage3/testimage3.png\";\n\n\nfunction shuffle(arra1) {\n  var ctr = arra1.length,\n    temp,\n    index;\n  while (ctr > 0) {\n    index = Math.floor(Math.random() * ctr);\n    ctr--;\n    temp = arra1[ctr];\n    arra1[ctr] = arra1[index];\n    arra1[index] = temp;\n  }\n  return arra1;\n}\n\nexport default function Gallery() {\n  const classes = useStyles();\n  const [galleryMode, exploreMode] = React.useState(false);\n\n  const [mount, setMount] = React.useState(false);\n  const [seconds, setSeconds] = React.useState(5);\n  const foo = React.useRef();\n  \n  \n  const [list, setList] = React.useState([]);\n  const [toggle, setToggle] = React.useState(false);\n  const [count, setCount] = React.useState(0); \n  const fooTwo = React.useRef(); \n   \n  const changeMode = () => {\n  exploreMode(true);\n  };\n\n  const props = useSpring({\n    opacity: toggle ? 1 : 0,\n  });\n  \n  const items = [\n      <UploadButton />,\n      <Paper className={classes.paper} elevation={0} />,\n      <img src={testimage2} alt=\"\" width=\"110px\" />,\n      <Paper className={classes.paper} elevation={0} />,\n      <img src={testimage1} alt=\"\" width=\"110px\" />,\n      <Paper className={classes.paper} elevation={0} />,\n      <img src={testimage3} alt=\"\" width=\"110px\" />,\n      <ExploreButton changeMode={changeMode} />,\n]; \n\nconst row = items.map((item, index) => (\n    <React.Fragment key={index}>\n      <Grid item>{item}</Grid>\n    </React.Fragment>\n  ));\n\nuseEffect(() => {\n  function counter() {\nsetCount((count) => count + 1);\n  }\n  fooTwo.current = setInterval(() => counter(), 1000); \n  if (count === 20) {\n    setToggle(true); \n    clearInterval(fooTwo.current);\n       const mountArray = shuffle(row);\n       setList(mountArray);}     \n  }, [count]);\n\n  useEffect(() => {\n    setMount(true);\n    function tick() {\n      setSeconds((prevSeconds) => prevSeconds - 1);\n    }\n    foo.current = setInterval(() => tick(), 1000);\n  }, []);\n\n  useEffect(() => {\n    if (seconds === 0) {\n      clearInterval(foo.current);\n      setMount(false);\n    }\n  }, [seconds]);\n\n  if (galleryMode) {\n    return <ExploreMode />;\n  } else {\n    return (\n      <div>\n        <br />\n        \n        <animated.div style={props}>\n          <div className={classes.root}>\n            <Box\n              display=\"flex\"\n              flexDirection=\"row\"\n              flexWrap=\"wrap\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              maxWidth=\"800px\"\n              minWidth=\"100px\"\n              margin=\"0 auto\"\n            >\n              <Grid\n                container\n                display=\"flex\"\n                flexDirection=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n                spacing={10}\n              >\n                {list}\n              </Grid>\n            </Box>\n          </div>\n        </animated.div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}