{"ast":null,"code":"var _jsxFileName = \"/Users/jielianglin/Desktop/projects/m-v2-prod/src/components/upload/annotation/P5Vector.js\";\nimport Sketch from 'react-p5';\nimport Sample from './sample/Sample.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet init;\nvar x, y, px, py;\nvar coords = [];\nlet colorPicker;\nlet height;\nlet width;\nlet img;\nlet pg;\nexport default function Vector() {\n  const preload = p5 => {\n    img = p5.loadImage(`${Sample}`);\n  };\n\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(600, 600).parent(canvasParentRef);\n    pg = p5.createGraphics(600, 600);\n    colorPicker = p5.createColorPicker('#ed225d');\n    colorPicker.position(width / 2, height / 2);\n  };\n\n  const draw = p5 => {\n    x = p5.mouseX;\n    y = p5.mouseY;\n    px = p5.pmouseX;\n    py = p5.pmouseY;\n\n    if (p5.mouseIsPressed) {\n      p5.strokeWeight(10);\n      p5.stroke();\n      p5.line(x, y, px, py);\n      coords.push([x, y]);\n      init = coords[0];\n      console.log(init);\n    }\n  };\n\n  const mouseReleased = p5 => {\n    p5.line(x, y, ...init);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Sketch, {\n    preload: preload,\n    setup: setup,\n    draw: draw,\n    mouseReleased: mouseReleased\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 13\n  }, this);\n}\n_c = Vector;\n\nvar _c;\n\n$RefreshReg$(_c, \"Vector\");","map":{"version":3,"sources":["/Users/jielianglin/Desktop/projects/m-v2-prod/src/components/upload/annotation/P5Vector.js"],"names":["Sketch","Sample","init","x","y","px","py","coords","colorPicker","height","width","img","pg","Vector","preload","p5","loadImage","setup","canvasParentRef","createCanvas","parent","createGraphics","createColorPicker","position","draw","mouseX","mouseY","pmouseX","pmouseY","mouseIsPressed","strokeWeight","stroke","line","push","console","log","mouseReleased"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,IAAIC,IAAJ;AACA,IAAIC,CAAJ,EAAOC,CAAP,EAAUC,EAAV,EAAcC,EAAd;AACA,IAAIC,MAAM,GAAG,EAAb;AAEA,IAAIC,WAAJ;AACA,IAAIC,MAAJ;AACA,IAAIC,KAAJ;AAEA,IAAIC,GAAJ;AACA,IAAIC,EAAJ;AAEA,eAAe,SAASC,MAAT,GAAiB;AAE5B,QAAMC,OAAO,GAAGC,EAAE,IAAI;AACtBJ,IAAAA,GAAG,GAAGI,EAAE,CAACC,SAAH,CAAc,GAAEf,MAAO,EAAvB,CAAN;AACC,GAFD;;AAIA,QAAMgB,KAAK,GAAG,CAACF,EAAD,EAAKG,eAAL,KAAyB;AACnCH,IAAAA,EAAE,CAACI,YAAH,CAAgB,GAAhB,EAAoB,GAApB,EAAyBC,MAAzB,CAAgCF,eAAhC;AACAN,IAAAA,EAAE,GAAGG,EAAE,CAACM,cAAH,CAAkB,GAAlB,EAAuB,GAAvB,CAAL;AACAb,IAAAA,WAAW,GAAGO,EAAE,CAACO,iBAAH,CAAqB,SAArB,CAAd;AACAd,IAAAA,WAAW,CAACe,QAAZ,CAAqBb,KAAK,GAAC,CAA3B,EAA8BD,MAAM,GAAC,CAArC;AAEH,GAND;;AAQA,QAAMe,IAAI,GAAGT,EAAE,IAAI;AACfZ,IAAAA,CAAC,GAAGY,EAAE,CAACU,MAAP;AACArB,IAAAA,CAAC,GAAGW,EAAE,CAACW,MAAP;AACArB,IAAAA,EAAE,GAAGU,EAAE,CAACY,OAAR;AACArB,IAAAA,EAAE,GAAGS,EAAE,CAACa,OAAR;;AAEA,QAAIb,EAAE,CAACc,cAAP,EAAsB;AAClBd,MAAAA,EAAE,CAACe,YAAH,CAAgB,EAAhB;AACAf,MAAAA,EAAE,CAACgB,MAAH;AACAhB,MAAAA,EAAE,CAACiB,IAAH,CAAQ7B,CAAR,EAAWC,CAAX,EAAcC,EAAd,EAAkBC,EAAlB;AACAC,MAAAA,MAAM,CAAC0B,IAAP,CAAY,CAAC9B,CAAD,EAAIC,CAAJ,CAAZ;AACAF,MAAAA,IAAI,GAAGK,MAAM,CAAC,CAAD,CAAb;AACA2B,MAAAA,OAAO,CAACC,GAAR,CAAYjC,IAAZ;AACH;AACJ,GAdD;;AAgBA,QAAMkC,aAAa,GAAGrB,EAAE,IAAI;AACxBA,IAAAA,EAAE,CAACiB,IAAH,CAAQ7B,CAAR,EAAWC,CAAX,EAAc,GAAGF,IAAjB;AACH,GAFD;;AAIC,sBAAO,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEY,OAAjB;AAA0B,IAAA,KAAK,EAAEG,KAAjC;AAAwC,IAAA,IAAI,EAAEO,IAA9C;AAAoD,IAAA,aAAa,EAAEY;AAAnE;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;KAnCmBvB,M","sourcesContent":["import Sketch from 'react-p5';\nimport Sample from './sample/Sample.jpg';\n\nlet init; \nvar x, y, px, py;\nvar coords = []; \n\nlet colorPicker;\nlet height; \nlet width; \n\nlet img; \nlet pg; \n\nexport default function Vector(){\n\n    const preload = p5 => {\n    img = p5.loadImage(`${Sample}`);\n    }\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(600,600).parent(canvasParentRef);\n        pg = p5.createGraphics(600, 600); \n        colorPicker = p5.createColorPicker('#ed225d');\n        colorPicker.position(width/2, height/2);\n               \n    }\n\n    const draw = p5 => {\n        x = p5.mouseX;\n        y = p5.mouseY;\n        px = p5.pmouseX;\n        py = p5.pmouseY;\n\n        if (p5.mouseIsPressed){\n            p5.strokeWeight(10); \n            p5.stroke(); \n            p5.line(x, y, px, py); \n            coords.push([x, y]); \n            init = coords[0]; \n            console.log(init);\n        }\n    }\n\n    const mouseReleased = p5 => { \n        p5.line(x, y, ...init); \n    }\n\n     return <Sketch preload={preload} setup={setup} draw={draw} mouseReleased={mouseReleased}/>  \n    }"]},"metadata":{},"sourceType":"module"}