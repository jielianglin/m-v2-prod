{"ast":null,"code":"var _jsxFileName = \"/Users/jielianglin/Desktop/projects/m-v2-prod/src/components/upload/annotation/AnnotatorII.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport ReactLassoSelect, { getCanvas } from 'react-lasso-select';\nimport Sample from \"./sample/Sample.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const src = \"./sample/Sample.jpg\";\n  const [points, setPoints] = useState([]);\n  const [clippedImg, setClippedImg] = useState();\n  const [show, setShow] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ReactLassoSelect, {\n      value: points,\n      src: src,\n      onChange: value => {\n        setPoints(value);\n      },\n      onComplete: value => {\n        if (!value.length) return;\n        getCanvas(src, value, (err, canvas) => {\n          if (!err) {\n            setClippedImg(canvas.toDataURL());\n            setShow(true);\n          }\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), setShow && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: clippedImg,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"JiXmcOkbaJqex/5ZAUm8CpV/FoI=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jielianglin/Desktop/projects/m-v2-prod/src/components/upload/annotation/AnnotatorII.js"],"names":["useState","ReactLassoSelect","getCanvas","Sample","App","src","points","setPoints","clippedImg","setClippedImg","show","setShow","value","length","err","canvas","toDataURL"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,gBAAP,IAA2BC,SAA3B,QAA4C,oBAA5C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,eAAe,SAASC,GAAT,GAAgB;AAAA;;AAC7B,QAAMC,GAAG,GAAC,qBAAV;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,EAA5C;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAiBX,QAAQ,CAAC,KAAD,CAA/B;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,gBAAD;AACE,MAAA,KAAK,EAAEM,MADT;AAEE,MAAA,GAAG,EAAED,GAFP;AAGE,MAAA,QAAQ,EAAEO,KAAK,IAAI;AACjBL,QAAAA,SAAS,CAACK,KAAD,CAAT;AACD,OALH;AAME,MAAA,UAAU,EAAEA,KAAK,IAAI;AAEnB,YAAI,CAACA,KAAK,CAACC,MAAX,EAAmB;AACnBX,QAAAA,SAAS,CAACG,GAAD,EAAMO,KAAN,EAAa,CAACE,GAAD,EAAMC,MAAN,KAAiB;AACrC,cAAI,CAACD,GAAL,EAAU;AACRL,YAAAA,aAAa,CAACM,MAAM,CAACC,SAAP,EAAD,CAAb;AACAL,YAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,SALQ,CAAT;AAMD;AAfH;AAAA;AAAA;AAAA;AAAA,YADF,EAqBGA,OAAO,iBAAK;AAAA,6BACX;AAAK,QAAA,GAAG,EAAEH,UAAV;AAAsB,QAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA;AADW;AAAA;AAAA;AAAA;AAAA,YArBf;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GAlCuBJ,G;;KAAAA,G","sourcesContent":["import { useState } from 'react';\nimport ReactLassoSelect, { getCanvas } from 'react-lasso-select';\nimport Sample from \"./sample/Sample.jpg\";\n\nexport default function App () {\n  const src=\"./sample/Sample.jpg\"; \n  const [points, setPoints] = useState([]);\n  const [clippedImg, setClippedImg] = useState();\n  const [show, setShow] =useState(false); \n  \n  \n  return (\n    <div className=\"App\">\n      <ReactLassoSelect\n        value={points}\n        src={src}\n        onChange={value => {\n          setPoints(value);\n        }}\n        onComplete={value => {\n            \n          if (!value.length) return;\n          getCanvas(src, value, (err, canvas) => {\n            if (!err) {\n              setClippedImg(canvas.toDataURL());\n              setShow(true); \n            }\n          });\n        }}\n      />\n   {/*<div>\n    Points: {points.map(({x, y}) => `${x},${y}`).join(' ')}\n    </div>*/}\n      {setShow && (<div>\n        <img src={clippedImg} alt=\"\" />\n      </div>)}\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}