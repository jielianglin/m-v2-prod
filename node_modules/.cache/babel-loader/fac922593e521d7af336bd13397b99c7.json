{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Attractor = void 0;\n\nconst Enums_1 = require(\"../../Enums\");\n\nconst Utils_1 = require(\"../../Utils\");\n\nclass Attractor {\n  constructor(container) {\n    this.container = container;\n  }\n\n  isEnabled() {\n    const container = this.container;\n    const options = container.actualOptions;\n    const mouse = container.interactivity.mouse;\n    const events = options.interactivity.events;\n\n    if (!(events.onHover.enable && mouse.position || events.onClick.enable && mouse.clickPosition)) {\n      return false;\n    }\n\n    const hoverMode = events.onHover.mode;\n    const clickMode = events.onClick.mode;\n    return Utils_1.Utils.isInArray(Enums_1.HoverMode.attract, hoverMode) || Utils_1.Utils.isInArray(Enums_1.ClickMode.attract, clickMode);\n  }\n\n  reset() {}\n\n  interact() {\n    const container = this.container;\n    const options = container.actualOptions;\n    const mouseMoveStatus = container.interactivity.status === Utils_1.Constants.mouseMoveEvent;\n    const events = options.interactivity.events;\n    const hoverEnabled = events.onHover.enable;\n    const hoverMode = events.onHover.mode;\n    const clickEnabled = events.onClick.enable;\n    const clickMode = events.onClick.mode;\n\n    if (mouseMoveStatus && hoverEnabled && Utils_1.Utils.isInArray(Enums_1.HoverMode.attract, hoverMode)) {\n      this.hoverAttract();\n    } else if (clickEnabled && Utils_1.Utils.isInArray(Enums_1.ClickMode.attract, clickMode)) {\n      this.clickAttract();\n    }\n  }\n\n  hoverAttract() {\n    const container = this.container;\n    const mousePos = container.interactivity.mouse.position;\n\n    if (!mousePos) {\n      return;\n    }\n\n    const attractRadius = container.retina.attractModeDistance;\n    this.processAttract(mousePos, attractRadius, new Utils_1.Circle(mousePos.x, mousePos.y, attractRadius));\n  }\n\n  processAttract(position, attractRadius, area) {\n    const container = this.container;\n    const query = container.particles.quadTree.query(area);\n\n    for (const particle of query) {\n      const {\n        dx,\n        dy,\n        distance\n      } = Utils_1.NumberUtils.getDistances(particle.position, position);\n      const normVec = {\n        x: dx / distance,\n        y: dy / distance\n      };\n      const velocity = container.actualOptions.interactivity.modes.attract.speed;\n      const attractFactor = Utils_1.NumberUtils.clamp((1 - Math.pow(distance / attractRadius, 2)) * velocity, 0, 50);\n      particle.position.x -= normVec.x * attractFactor;\n      particle.position.y -= normVec.y * attractFactor;\n    }\n  }\n\n  clickAttract() {\n    const container = this.container;\n\n    if (!container.attract.finish) {\n      if (!container.attract.count) {\n        container.attract.count = 0;\n      }\n\n      container.attract.count++;\n\n      if (container.attract.count === container.particles.count) {\n        container.attract.finish = true;\n      }\n    }\n\n    if (container.attract.clicking) {\n      const mousePos = container.interactivity.mouse.clickPosition;\n\n      if (!mousePos) {\n        return;\n      }\n\n      const attractRadius = container.retina.attractModeDistance;\n      this.processAttract(mousePos, attractRadius, new Utils_1.Circle(mousePos.x, mousePos.y, attractRadius));\n    } else if (container.attract.clicking === false) {\n      container.attract.particles = [];\n    }\n\n    return;\n  }\n\n}\n\nexports.Attractor = Attractor;","map":{"version":3,"sources":["/Users/jielianglin/Desktop/projects/m-v2-prod/node_modules/tsparticles/dist/Interactions/External/Attractor.js"],"names":["Object","defineProperty","exports","value","Attractor","Enums_1","require","Utils_1","constructor","container","isEnabled","options","actualOptions","mouse","interactivity","events","onHover","enable","position","onClick","clickPosition","hoverMode","mode","clickMode","Utils","isInArray","HoverMode","attract","ClickMode","reset","interact","mouseMoveStatus","status","Constants","mouseMoveEvent","hoverEnabled","clickEnabled","hoverAttract","clickAttract","mousePos","attractRadius","retina","attractModeDistance","processAttract","Circle","x","y","area","query","particles","quadTree","particle","dx","dy","distance","NumberUtils","getDistances","normVec","velocity","modes","speed","attractFactor","clamp","Math","pow","finish","count","clicking"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Attractor = void 0;\nconst Enums_1 = require(\"../../Enums\");\nconst Utils_1 = require(\"../../Utils\");\nclass Attractor {\n    constructor(container) {\n        this.container = container;\n    }\n    isEnabled() {\n        const container = this.container;\n        const options = container.actualOptions;\n        const mouse = container.interactivity.mouse;\n        const events = options.interactivity.events;\n        if (!((events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        const clickMode = events.onClick.mode;\n        return Utils_1.Utils.isInArray(Enums_1.HoverMode.attract, hoverMode) || Utils_1.Utils.isInArray(Enums_1.ClickMode.attract, clickMode);\n    }\n    reset() {\n    }\n    interact() {\n        const container = this.container;\n        const options = container.actualOptions;\n        const mouseMoveStatus = container.interactivity.status === Utils_1.Constants.mouseMoveEvent;\n        const events = options.interactivity.events;\n        const hoverEnabled = events.onHover.enable;\n        const hoverMode = events.onHover.mode;\n        const clickEnabled = events.onClick.enable;\n        const clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && Utils_1.Utils.isInArray(Enums_1.HoverMode.attract, hoverMode)) {\n            this.hoverAttract();\n        }\n        else if (clickEnabled && Utils_1.Utils.isInArray(Enums_1.ClickMode.attract, clickMode)) {\n            this.clickAttract();\n        }\n    }\n    hoverAttract() {\n        const container = this.container;\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const attractRadius = container.retina.attractModeDistance;\n        this.processAttract(mousePos, attractRadius, new Utils_1.Circle(mousePos.x, mousePos.y, attractRadius));\n    }\n    processAttract(position, attractRadius, area) {\n        const container = this.container;\n        const query = container.particles.quadTree.query(area);\n        for (const particle of query) {\n            const { dx, dy, distance } = Utils_1.NumberUtils.getDistances(particle.position, position);\n            const normVec = {\n                x: dx / distance,\n                y: dy / distance,\n            };\n            const velocity = container.actualOptions.interactivity.modes.attract.speed;\n            const attractFactor = Utils_1.NumberUtils.clamp((1 - Math.pow(distance / attractRadius, 2)) * velocity, 0, 50);\n            particle.position.x -= normVec.x * attractFactor;\n            particle.position.y -= normVec.y * attractFactor;\n        }\n    }\n    clickAttract() {\n        const container = this.container;\n        if (!container.attract.finish) {\n            if (!container.attract.count) {\n                container.attract.count = 0;\n            }\n            container.attract.count++;\n            if (container.attract.count === container.particles.count) {\n                container.attract.finish = true;\n            }\n        }\n        if (container.attract.clicking) {\n            const mousePos = container.interactivity.mouse.clickPosition;\n            if (!mousePos) {\n                return;\n            }\n            const attractRadius = container.retina.attractModeDistance;\n            this.processAttract(mousePos, attractRadius, new Utils_1.Circle(mousePos.x, mousePos.y, attractRadius));\n        }\n        else if (container.attract.clicking === false) {\n            container.attract.particles = [];\n        }\n        return;\n    }\n}\nexports.Attractor = Attractor;\n"]},"metadata":{},"sourceType":"script"}