{"ast":null,"code":"var _jsxFileName = \"/Users/jielianglin/Desktop/projects/m-v2-prod/src/components/upload/annotation/P5Vector.js\";\nimport Sketch from 'react-p5';\nimport Sample from './sample/Sample.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet penState = 0;\nlet penSize = 5;\nlet init;\nvar x, y, px, py;\nvar coords = [];\nlet colorPicker;\nlet height;\nlet width;\nlet img;\nlet pg;\nexport default function Vector() {\n  const preload = p5 => {\n    img = p5.loadImage(`${Sample}`);\n  };\n\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(600, 600).parent(canvasParentRef);\n    pg = p5.createGraphics(600, 600);\n    colorPicker = p5.createColorPicker('black');\n    colorPicker.position(0, width / 2);\n  };\n\n  const draw = p5 => {\n    x = p5.mouseX;\n    y = p5.mouseY;\n    px = p5.pmouseX;\n    py = p5.pmouseY;\n    p5.image(img, 0, 0);\n    pg.strokeWeight(penSize);\n    p5.stroke(colorPicker.color());\n\n    if (p5.mouseIsPressed) {\n      if (penState === 0) {\n        pg.line(x, y, px, py);\n        coords.push([x, y]);\n        init = coords[0];\n        console.log(init);\n      }\n    }\n\n    p5.image(pg, 0, 0);\n  };\n\n  const mouseReleased = p5 => {\n    pg.line(x, y, ...init);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Sketch, {\n    preload: preload,\n    setup: setup,\n    draw: draw,\n    mouseReleased: mouseReleased\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 13\n  }, this);\n}\n_c = Vector;\n\nvar _c;\n\n$RefreshReg$(_c, \"Vector\");","map":{"version":3,"sources":["/Users/jielianglin/Desktop/projects/m-v2-prod/src/components/upload/annotation/P5Vector.js"],"names":["Sketch","Sample","penState","penSize","init","x","y","px","py","coords","colorPicker","height","width","img","pg","Vector","preload","p5","loadImage","setup","canvasParentRef","createCanvas","parent","createGraphics","createColorPicker","position","draw","mouseX","mouseY","pmouseX","pmouseY","image","strokeWeight","stroke","color","mouseIsPressed","line","push","console","log","mouseReleased"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,IAAIC,QAAQ,GAAG,CAAf;AACA,IAAIC,OAAO,GAAG,CAAd;AAEA,IAAIC,IAAJ;AACA,IAAIC,CAAJ,EAAOC,CAAP,EAAUC,EAAV,EAAcC,EAAd;AACA,IAAIC,MAAM,GAAG,EAAb;AAEA,IAAIC,WAAJ;AACA,IAAIC,MAAJ;AACA,IAAIC,KAAJ;AAEA,IAAIC,GAAJ;AACA,IAAIC,EAAJ;AAEA,eAAe,SAASC,MAAT,GAAiB;AAE5B,QAAMC,OAAO,GAAGC,EAAE,IAAI;AACtBJ,IAAAA,GAAG,GAAGI,EAAE,CAACC,SAAH,CAAc,GAAEjB,MAAO,EAAvB,CAAN;AACC,GAFD;;AAIA,QAAMkB,KAAK,GAAG,CAACF,EAAD,EAAKG,eAAL,KAAyB;AACnCH,IAAAA,EAAE,CAACI,YAAH,CAAgB,GAAhB,EAAoB,GAApB,EAAyBC,MAAzB,CAAgCF,eAAhC;AACAN,IAAAA,EAAE,GAAGG,EAAE,CAACM,cAAH,CAAkB,GAAlB,EAAuB,GAAvB,CAAL;AACAb,IAAAA,WAAW,GAAGO,EAAE,CAACO,iBAAH,CAAqB,OAArB,CAAd;AACAd,IAAAA,WAAW,CAACe,QAAZ,CAAqB,CAArB,EAAwBb,KAAK,GAAC,CAA9B;AAGH,GAPD;;AASA,QAAMc,IAAI,GAAGT,EAAE,IAAI;AACfZ,IAAAA,CAAC,GAAGY,EAAE,CAACU,MAAP;AACArB,IAAAA,CAAC,GAAGW,EAAE,CAACW,MAAP;AACArB,IAAAA,EAAE,GAAGU,EAAE,CAACY,OAAR;AACArB,IAAAA,EAAE,GAAGS,EAAE,CAACa,OAAR;AAEAb,IAAAA,EAAE,CAACc,KAAH,CAASlB,GAAT,EAAc,CAAd,EAAiB,CAAjB;AACAC,IAAAA,EAAE,CAACkB,YAAH,CAAgB7B,OAAhB;AACAc,IAAAA,EAAE,CAACgB,MAAH,CAAUvB,WAAW,CAACwB,KAAZ,EAAV;;AAEA,QAAIjB,EAAE,CAACkB,cAAP,EAAsB;AAClB,UAAIjC,QAAQ,KAAK,CAAjB,EAAmB;AACnBY,QAAAA,EAAE,CAACsB,IAAH,CAAQ/B,CAAR,EAAWC,CAAX,EAAcC,EAAd,EAAkBC,EAAlB;AACAC,QAAAA,MAAM,CAAC4B,IAAP,CAAY,CAAChC,CAAD,EAAIC,CAAJ,CAAZ;AACAF,QAAAA,IAAI,GAAGK,MAAM,CAAC,CAAD,CAAb;AACA6B,QAAAA,OAAO,CAACC,GAAR,CAAYnC,IAAZ;AAAmB;AACtB;;AACDa,IAAAA,EAAE,CAACc,KAAH,CAASjB,EAAT,EAAa,CAAb,EAAgB,CAAhB;AACH,GAlBD;;AAoBA,QAAM0B,aAAa,GAAGvB,EAAE,IAAI;AACxBH,IAAAA,EAAE,CAACsB,IAAH,CAAQ/B,CAAR,EAAWC,CAAX,EAAc,GAAGF,IAAjB;AACH,GAFD;;AAIC,sBAAO,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEY,OAAjB;AAA0B,IAAA,KAAK,EAAEG,KAAjC;AAAwC,IAAA,IAAI,EAAEO,IAA9C;AAAoD,IAAA,aAAa,EAAEc;AAAnE;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;KAxCmBzB,M","sourcesContent":["import Sketch from 'react-p5';\nimport Sample from './sample/Sample.jpg';\n\nlet penState = 0;\nlet penSize = 5;\n\nlet init; \nvar x, y, px, py;\nvar coords = []; \n\nlet colorPicker;\nlet height; \nlet width; \n\nlet img; \nlet pg; \n\nexport default function Vector(){\n\n    const preload = p5 => {\n    img = p5.loadImage(`${Sample}`);\n    }\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(600,600).parent(canvasParentRef);\n        pg = p5.createGraphics(600, 600); \n        colorPicker = p5.createColorPicker('black');\n        colorPicker.position(0, width/2);\n        \n               \n    }\n\n    const draw = p5 => {\n        x = p5.mouseX;\n        y = p5.mouseY;\n        px = p5.pmouseX;\n        py = p5.pmouseY;\n\n        p5.image(img, 0, 0);\n        pg.strokeWeight(penSize); \n        p5.stroke(colorPicker.color()); \n\n        if (p5.mouseIsPressed){\n            if (penState === 0){\n            pg.line(x, y, px, py); \n            coords.push([x, y]); \n            init = coords[0]; \n            console.log(init);}\n        }\n        p5.image(pg, 0, 0);\n    }\n\n    const mouseReleased = p5 => { \n        pg.line(x, y, ...init); \n    }\n\n     return <Sketch preload={preload} setup={setup} draw={draw} mouseReleased={mouseReleased}/>  \n    }"]},"metadata":{},"sourceType":"module"}