{"ast":null,"code":"var _jsxFileName = \"/Users/jielianglin/Desktop/projects/m-v2-prod/src/pages/home/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport UploadButton from \"../../components/upload/uploadButton/UploadButton\";\nimport ExploreButton from \"../../components/explore/exploreButton/ExploreButton\";\nimport ExploreMode from \"./ExploreMode\";\nimport { useSpring, animated } from \"react-spring\";\nimport { Transition } from \"react-transition-group\";\nimport testimage1 from \"./testimage1/testimage1.png\";\nimport testimage2 from \"./testimage2/testimage2.png\";\nimport testimage3 from \"./testimage3/testimage3.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: \"100px\",\n    flexShrink: 1\n  },\n  paper: {\n    padding: theme.spacing(8),\n    textAlign: \"center\",\n    backgroundColor: \"#E5E5E5\"\n  }\n}));\n\nconst Intro = ({\n  in: inProp\n}) => /*#__PURE__*/_jsxDEV(Transition, {\n  in: inProp,\n  timeout: {\n    enter: 500,\n    exit: 500\n  },\n  children: state => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: { ...defaultStyle,\n      ...transitionStyles[state],\n      textAlign: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        children: \"What is essential is invisible to the eye. -Antoine St. Exupery (1943)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 3\n}, this);\n\n_c = Intro;\nconst defaultStyle = {\n  transition: `transform 5000ms, opacity 5000ms ease`,\n  opacity: 1\n};\nconst transitionStyles = {\n  entering: {\n    opacity: 0\n  },\n  entered: {\n    opacity: 1\n  },\n  exiting: {\n    opacity: 0\n  },\n  exited: {\n    opacity: 0\n  }\n};\n\nfunction customShuffle(arra1) {\n  var ctr = arra1.length,\n      temp,\n      index;\n\n  while (ctr > 0) {\n    index = Math.floor(Math.random() * ctr);\n    ctr--;\n    temp = arra1[ctr];\n    arra1[ctr] = arra1[index];\n    arra1[index] = temp;\n  }\n\n  return arra1;\n}\n\nexport default function Gallery() {\n  _s();\n\n  const classes = useStyles();\n  const [galleryMode, exploreMode] = React.useState(false);\n  const [mount, setMount] = React.useState(false);\n  const [seconds, setSeconds] = React.useState(5);\n  const foo = React.useRef();\n  const [list, setList] = React.useState([]);\n\n  const changeMode = () => {\n    exploreMode(true);\n  };\n\n  const items = [/*#__PURE__*/_jsxDEV(UploadButton, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    elevation: 0\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n    src: testimage2,\n    alt: \"\",\n    width: \"110px\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    elevation: 0\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n    src: testimage1,\n    alt: \"\",\n    width: \"110px\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    elevation: 0\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n    src: testimage3,\n    alt: \"\",\n    width: \"110px\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(ExploreButton, {\n    changeMode: changeMode\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 7\n  }, this)];\n  customShuffle(items);\n  const fade = useSpring({\n    to: {\n      opacity: 1\n    },\n    from: {\n      opacity: 0\n    }\n  });\n  useEffect(() => {\n    setMount(true);\n\n    function tick() {\n      setSeconds(prevSeconds => prevSeconds - 1);\n    }\n\n    foo.current = setInterval(() => tick(), 1000);\n  }, []);\n  useEffect(() => {\n    if (seconds === 0) {\n      clearInterval(foo.current);\n      setMount(false);\n    }\n  }, [seconds]);\n\n  if (galleryMode) {\n    return /*#__PURE__*/_jsxDEV(ExploreMode, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Intro, {\n        in: mount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(animated.div, {\n        style: fade,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.root,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            maxWidth: \"800px\",\n            minWidth: \"100px\",\n            margin: \"0 auto\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              display: \"flex\",\n              flexDirection: \"column\",\n              justify: \"center\",\n              alignItems: \"center\",\n              spacing: 10,\n              children: items.map((item, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: item\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 7\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 5\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Gallery, \"8cuo7OSi05THNhRTENVzhTFzE3w=\", false, function () {\n  return [useStyles, useSpring];\n});\n\n_c2 = Gallery;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Intro\");\n$RefreshReg$(_c2, \"Gallery\");","map":{"version":3,"sources":["/Users/jielianglin/Desktop/projects/m-v2-prod/src/pages/home/Home.js"],"names":["React","useEffect","makeStyles","Paper","Grid","Box","Typography","UploadButton","ExploreButton","ExploreMode","useSpring","animated","Transition","testimage1","testimage2","testimage3","useStyles","theme","root","paddingTop","flexShrink","paper","padding","spacing","textAlign","backgroundColor","Intro","in","inProp","enter","exit","state","defaultStyle","transitionStyles","transition","opacity","entering","entered","exiting","exited","customShuffle","arra1","ctr","length","temp","index","Math","floor","random","Gallery","classes","galleryMode","exploreMode","useState","mount","setMount","seconds","setSeconds","foo","useRef","list","setList","changeMode","items","fade","to","from","tick","prevSeconds","current","setInterval","clearInterval","map","item"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport UploadButton from \"../../components/upload/uploadButton/UploadButton\";\nimport ExploreButton from \"../../components/explore/exploreButton/ExploreButton\";\nimport ExploreMode from \"./ExploreMode\";\nimport { useSpring, animated } from \"react-spring\";\nimport { Transition } from \"react-transition-group\";\nimport testimage1 from \"./testimage1/testimage1.png\";\nimport testimage2 from \"./testimage2/testimage2.png\";\nimport testimage3 from \"./testimage3/testimage3.png\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: \"100px\",\n    flexShrink: 1,\n  },\n  paper: {\n    padding: theme.spacing(8),\n    textAlign: \"center\",\n    backgroundColor: \"#E5E5E5\",\n  },\n}));\n\nconst Intro = ({ in: inProp }) => (\n  <Transition in={inProp} timeout={{ enter: 500, exit: 500 }}>\n    {(state) => (\n      <div\n        style={{\n          ...defaultStyle,\n          ...transitionStyles[state],\n          textAlign: \"center\",\n        }}\n      >\n        <Typography>\n          <i>\n            What is essential is invisible to the eye. -Antoine St. Exupery\n            (1943)\n          </i>\n        </Typography>\n      </div>\n    )}\n  </Transition>\n);\n\nconst defaultStyle = {\n  transition: `transform 5000ms, opacity 5000ms ease`,\n  opacity: 1,\n};\n\nconst transitionStyles = {\n  entering: { opacity: 0 },\n  entered: { opacity: 1 },\n  exiting: { opacity: 0 },\n  exited: { opacity: 0 },\n};\n\nfunction customShuffle(arra1) {\nvar ctr = arra1.length,\n    temp,\n    index;\n  while (ctr > 0) {\n    index = Math.floor(Math.random() * ctr);\n    ctr--;\n    temp = arra1[ctr];\n    arra1[ctr] = arra1[index];\n    arra1[index] = temp;\n  }\n  return arra1;\n}\n\nexport default function Gallery() {\n  const classes = useStyles();\n  const [galleryMode, exploreMode] = React.useState(false);\n  const [mount, setMount] = React.useState(false);\n  const [seconds, setSeconds] = React.useState(5);\n  const foo = React.useRef();\n  const [list, setList] = React.useState([]); \n  \n  const changeMode = () => {\n  exploreMode(true);\n  };\n\n  const items = [\n      <UploadButton />,\n      <Paper className={classes.paper} elevation={0} />,\n      <img src={testimage2} alt=\"\" width=\"110px\" />,\n      <Paper className={classes.paper} elevation={0} />,\n      <img src={testimage1} alt=\"\" width=\"110px\" />,\n      <Paper className={classes.paper} elevation={0} />,\n      <img src={testimage3} alt=\"\" width=\"110px\" />,\n      <ExploreButton changeMode={changeMode} />,\n]; \n\ncustomShuffle(items);\n\n\n  const fade = useSpring({\n    to: { opacity: 1 }, from: { opacity: 0 }\n  });\n\n\n  useEffect(() => {\n    setMount(true);\n    function tick() {\n      setSeconds((prevSeconds) => prevSeconds - 1);\n    }\n    foo.current = setInterval(() => tick(), 1000);\n  }, []);\n\n  useEffect(() => {\n    if (seconds === 0) {\n      clearInterval(foo.current);\n      setMount(false);\n    }\n  }, [seconds]);\n\n\n  if (galleryMode) {\n    return <ExploreMode />;\n  } else {\n    return (\n      <div>\n        <br />\n        <Intro in={mount} />\n        <animated.div style={fade}>\n          <div className={classes.root}>\n            <Box\n              display=\"flex\"\n              flexDirection=\"row\"\n              flexWrap=\"wrap\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              maxWidth=\"800px\"\n              minWidth=\"100px\"\n              margin=\"0 auto\"\n            >\n              <Grid\n                container\n                display=\"flex\"\n                flexDirection=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n                spacing={10}\n              >\n                {items.map((item, index) => (\n    <React.Fragment key={index}>\n      <Grid item>{item}</Grid>\n    </React.Fragment>\n  ))}\n              </Grid>\n            </Box>\n          </div>\n        </animated.div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}