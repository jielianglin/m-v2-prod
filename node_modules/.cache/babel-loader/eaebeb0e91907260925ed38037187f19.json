{"ast":null,"code":"var _jsxFileName = \"/Users/jielianglin/Desktop/projects/m-v2-prod/src/components/upload/annotation/P5Lasso.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Sketch from 'react-p5';\nimport Sample from './sample/Sample.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet penSize = 5;\nlet penState = 0;\nlet init;\nvar x, y, px, py;\nvar coords = [];\nlet colorPicker;\nlet img;\nlet pg;\nexport default function Vector() {\n  _s();\n\n  const [setColor, drawLasso] = useState(false);\n\n  const preload = p5 => {\n    img = p5.loadImage(`${Sample}`);\n  };\n\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(600, 600).parent(canvasParentRef);\n    pg = p5.createGraphics(600, 600);\n    colorPicker = p5.createColorPicker('#ed225d');\n    colorPicker.position(p5.width / 3, p5.height - 20);\n  };\n\n  const draw = p5 => {\n    x = p5.mouseX;\n    y = p5.mouseY;\n    px = p5.pmouseX;\n    py = p5.pmouseY;\n    p5.image(img, 0, 0);\n    pg.strokeWeight(penSize);\n\n    if (p5.mouseIsPressed) {\n      if (penState === 0) {\n        pg.stroke(colorPicker.color());\n        pg.line(x, y, px, py);\n        coords.push([x, y]);\n        init = coords[0];\n        console.log(init);\n      }\n    }\n\n    p5.image(pg, 0, 0);\n  };\n\n  const mouseReleased = () => {\n    pg.line(x, y, ...init);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Sketch, {\n    preload: preload,\n    setup: setup,\n    draw: draw,\n    mouseReleased: mouseReleased\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Vector, \"6lxgNpkcm2AC1BhxfPd5XvV1d00=\");\n\n_c = Vector;\n\nvar _c;\n\n$RefreshReg$(_c, \"Vector\");","map":{"version":3,"sources":["/Users/jielianglin/Desktop/projects/m-v2-prod/src/components/upload/annotation/P5Lasso.js"],"names":["React","Sketch","Sample","penSize","penState","init","x","y","px","py","coords","colorPicker","img","pg","Vector","setColor","drawLasso","useState","preload","p5","loadImage","setup","canvasParentRef","createCanvas","parent","createGraphics","createColorPicker","position","width","height","draw","mouseX","mouseY","pmouseX","pmouseY","image","strokeWeight","mouseIsPressed","stroke","color","line","push","console","log","mouseReleased"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,IAAIC,OAAO,GAAG,CAAd;AACA,IAAIC,QAAQ,GAAG,CAAf;AAEA,IAAIC,IAAJ;AACA,IAAIC,CAAJ,EAAOC,CAAP,EAAUC,EAAV,EAAcC,EAAd;AACA,IAAIC,MAAM,GAAG,EAAb;AAEA,IAAIC,WAAJ;AAGA,IAAIC,GAAJ;AACA,IAAIC,EAAJ;AAEA,eAAe,SAASC,MAAT,GAAiB;AAAA;;AAChC,QAAM,CAACC,QAAD,EAAWC,SAAX,IAAwBC,QAAQ,CAAC,KAAD,CAAtC;;AAEI,QAAMC,OAAO,GAAGC,EAAE,IAAI;AACtBP,IAAAA,GAAG,GAAGO,EAAE,CAACC,SAAH,CAAc,GAAElB,MAAO,EAAvB,CAAN;AACC,GAFD;;AAIA,QAAMmB,KAAK,GAAG,CAACF,EAAD,EAAKG,eAAL,KAAyB;AACnCH,IAAAA,EAAE,CAACI,YAAH,CAAgB,GAAhB,EAAoB,GAApB,EAAyBC,MAAzB,CAAgCF,eAAhC;AACAT,IAAAA,EAAE,GAAGM,EAAE,CAACM,cAAH,CAAkB,GAAlB,EAAuB,GAAvB,CAAL;AACAd,IAAAA,WAAW,GAAGQ,EAAE,CAACO,iBAAH,CAAqB,SAArB,CAAd;AACAf,IAAAA,WAAW,CAACgB,QAAZ,CAAqBR,EAAE,CAACS,KAAH,GAAS,CAA9B,EAAiCT,EAAE,CAACU,MAAH,GAAU,EAA3C;AACH,GALD;;AAOA,QAAMC,IAAI,GAAGX,EAAE,IAAI;AACfb,IAAAA,CAAC,GAAGa,EAAE,CAACY,MAAP;AACAxB,IAAAA,CAAC,GAAGY,EAAE,CAACa,MAAP;AACAxB,IAAAA,EAAE,GAAGW,EAAE,CAACc,OAAR;AACAxB,IAAAA,EAAE,GAAGU,EAAE,CAACe,OAAR;AAEAf,IAAAA,EAAE,CAACgB,KAAH,CAASvB,GAAT,EAAc,CAAd,EAAiB,CAAjB;AACAC,IAAAA,EAAE,CAACuB,YAAH,CAAgBjC,OAAhB;;AAEI,QAAIgB,EAAE,CAACkB,cAAP,EAAsB;AACd,UAAIjC,QAAQ,KAAK,CAAjB,EAAmB;AACnBS,QAAAA,EAAE,CAACyB,MAAH,CAAU3B,WAAW,CAAC4B,KAAZ,EAAV;AACA1B,QAAAA,EAAE,CAAC2B,IAAH,CAAQlC,CAAR,EAAWC,CAAX,EAAcC,EAAd,EAAkBC,EAAlB;AACAC,QAAAA,MAAM,CAAC+B,IAAP,CAAY,CAACnC,CAAD,EAAIC,CAAJ,CAAZ;AACAF,QAAAA,IAAI,GAAGK,MAAM,CAAC,CAAD,CAAb;AACAgC,QAAAA,OAAO,CAACC,GAAR,CAAYtC,IAAZ;AAAmB;AAC1B;;AACDc,IAAAA,EAAE,CAACgB,KAAH,CAAStB,EAAT,EAAa,CAAb,EAAgB,CAAhB;AACP,GAlBD;;AAoBA,QAAM+B,aAAa,GAAG,MAAM;AACxB/B,IAAAA,EAAE,CAAC2B,IAAH,CAAQlC,CAAR,EAAWC,CAAX,EAAc,GAAGF,IAAjB;AACH,GAFD;;AAIC,sBAAO,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEa,OAAjB;AAA0B,IAAA,KAAK,EAAEG,KAAjC;AAAwC,IAAA,IAAI,EAAES,IAA9C;AAAoD,IAAA,aAAa,EAAEc;AAAnE;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;;GAvCmB9B,M;;KAAAA,M","sourcesContent":["import React from 'react'; \n\nimport Sketch from 'react-p5';\nimport Sample from './sample/Sample.jpg';\n\nlet penSize = 5;\nlet penState = 0;\n\nlet init; \nvar x, y, px, py;\nvar coords = [];\n\nlet colorPicker;\n\n\nlet img; \nlet pg; \n\nexport default function Vector(){\nconst [setColor, drawLasso] = useState(false); \n\n    const preload = p5 => {\n    img = p5.loadImage(`${Sample}`);\n    }\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(600,600).parent(canvasParentRef);\n        pg = p5.createGraphics(600, 600); \n        colorPicker = p5.createColorPicker('#ed225d');\n        colorPicker.position(p5.width/3, p5.height-20);         \n    }\n\n    const draw = p5 => {\n        x = p5.mouseX;\n        y = p5.mouseY;\n        px = p5.pmouseX;\n        py = p5.pmouseY;\n\n        p5.image(img, 0, 0);\n        pg.strokeWeight(penSize); \n        \n            if (p5.mouseIsPressed){\n                    if (penState === 0){\n                    pg.stroke(colorPicker.color()); \n                    pg.line(x, y, px, py); \n                    coords.push([x, y]); \n                    init = coords[0]; \n                    console.log(init);}\n            }\n            p5.image(pg, 0, 0);\n    }\n\n    const mouseReleased = () => { \n        pg.line(x, y, ...init); \n    }\n\n     return <Sketch preload={preload} setup={setup} draw={draw} mouseReleased={mouseReleased}/>  \n    }"]},"metadata":{},"sourceType":"module"}