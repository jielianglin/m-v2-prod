{"ast":null,"code":"var _jsxFileName = \"/Users/jielianglin/Desktop/projects/m-v2-prod/src/components/upload/annotation/Lasso.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react';\nimport ReactLassoSelect, { getCanvas } from 'react-lasso-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LassoI() {\n  _s();\n\n  const [src, setSrc] = useState(null);\n  const [points, setPoints] = useState([]);\n  const [clippedImg, setClippedImg] = useState();\n  const [show, setShow] = useState(false);\n  const fileInput = useRef(null);\n\n  const handleImageSelection = event => {\n    let file = event.target.files[0];\n    let reader = new FileReader();\n\n    reader.onload = function (e) {\n      setSrc(e.target.result);\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  const openFileInput = () => {\n    var _fileInput$current;\n\n    (_fileInput$current = fileInput.current) === null || _fileInput$current === void 0 ? void 0 : _fileInput$current.click();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: \"0 auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openFileInput,\n      children: [\"Choose image\", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: fileInput,\n          style: {\n            display: \"none\"\n          },\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleImageSelection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(ReactLassoSelect, {\n      value: points,\n      src: src,\n      onChange: value => {\n        setPoints(value);\n      },\n      onComplete: value => {\n        if (!value.length) return;\n        getCanvas(src, value, (err, canvas) => {\n          if (!err) {\n            setClippedImg(canvas.toDataURL());\n            setShow(true);\n            setSrc(null);\n          }\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 1\n    }, this), show && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: clippedImg,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 6\n  }, this);\n}\n\n_s(LassoI, \"rfnBu2FLp7lOyuZu6fYYaG1W8xA=\");\n\n_c = LassoI;\n\nvar _c;\n\n$RefreshReg$(_c, \"LassoI\");","map":{"version":3,"sources":["/Users/jielianglin/Desktop/projects/m-v2-prod/src/components/upload/annotation/Lasso.js"],"names":["useState","useRef","ReactLassoSelect","getCanvas","LassoI","src","setSrc","points","setPoints","clippedImg","setClippedImg","show","setShow","fileInput","handleImageSelection","event","file","target","files","reader","FileReader","onload","e","result","readAsDataURL","openFileInput","current","click","margin","display","value","length","err","canvas","toDataURL"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,IAA2BC,SAA3B,QAA4C,oBAA5C;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAeN,QAAQ,CAAC,IAAD,CAA7B;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,EAA5C;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMa,SAAS,GAAGZ,MAAM,CAAC,IAAD,CAAxB;;AAEF,QAAMa,oBAAoB,GAAIC,KAAD,IAAW;AACpC,QAAIC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAX;AACA,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,UAAUC,CAAV,EAAa;AAC3BhB,MAAAA,MAAM,CAACgB,CAAC,CAACL,MAAF,CAASM,MAAV,CAAN;AACD,KAFD;;AAGAJ,IAAAA,MAAM,CAACK,aAAP,CAAqBR,IAArB;AACD,GAPH;;AASE,QAAMS,aAAa,GAAG,MAAM;AAAA;;AAC1B,0BAAAZ,SAAS,CAACa,OAAV,0EAAmBC,KAAnB;AACD,GAFD;;AAKD,sBACI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAZ;AAAA,4BAEL;AAAQ,MAAA,OAAO,EAAEH,aAAjB;AAAA,8CAEM;AAAA,+BACE;AACE,UAAA,GAAG,EAAEZ,SADP;AAEE,UAAA,KAAK,EAAE;AAAEgB,YAAAA,OAAO,EAAE;AAAX,WAFT;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,MAAM,EAAC,SAJT;AAKE,UAAA,QAAQ,EAAEf;AALZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFN;AAAA;AAAA;AAAA;AAAA;AAAA,YAFK,eAgBL,QAAC,gBAAD;AACQ,MAAA,KAAK,EAAEP,MADf;AAEQ,MAAA,GAAG,EAAEF,GAFb;AAGQ,MAAA,QAAQ,EAAEyB,KAAK,IAAI;AACjBtB,QAAAA,SAAS,CAACsB,KAAD,CAAT;AACD,OALT;AAMQ,MAAA,UAAU,EAAEA,KAAK,IAAI;AACnB,YAAI,CAACA,KAAK,CAACC,MAAX,EAAmB;AACnB5B,QAAAA,SAAS,CAACE,GAAD,EAAMyB,KAAN,EAAa,CAACE,GAAD,EAAMC,MAAN,KAAiB;AACrC,cAAI,CAACD,GAAL,EAAU;AACRtB,YAAAA,aAAa,CAACuB,MAAM,CAACC,SAAP,EAAD,CAAb;AACAtB,YAAAA,OAAO,CAAC,IAAD,CAAP;AACAN,YAAAA,MAAM,CAAC,IAAD,CAAN;AACD;AACF,SANQ,CAAT;AAOD;AAfT;AAAA;AAAA;AAAA;AAAA,YAhBK,EAiCIK,IAAI,iBAAI;AAAK,MAAA,GAAG,EAAEF,UAAV;AAAsB,MAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,YAjCZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqCI;;GA1DmBL,M;;KAAAA,M","sourcesContent":["import { useState, useRef } from 'react';\nimport ReactLassoSelect, { getCanvas } from 'react-lasso-select';\n\nexport default function LassoI() { \n  const [src, setSrc]= useState(null); \n  const [points, setPoints] = useState([]);\n  const [clippedImg, setClippedImg] = useState();\n  const [show, setShow] = useState(false);\n  const fileInput = useRef(null);\n  \nconst handleImageSelection = (event) => {\n    let file = event.target.files[0];\n    let reader = new FileReader();\n    reader.onload = function (e) {\n      setSrc(e.target.result);\n    };\n    reader.readAsDataURL(file);\n  };\n\n  const openFileInput = () => {\n    fileInput.current?.click();\n  };\n\n\n return (\n     <div style={{margin: \"0 auto\"}}>\n\n<button onClick={openFileInput}>\nChoose image\n      <label>\n        <input\n          ref={fileInput}\n          style={{ display: \"none\" }}\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={handleImageSelection}\n        />\n      </label>\n    </button>\n\n\n<ReactLassoSelect\n        value={points}\n        src={src}\n        onChange={value => {\n          setPoints(value);\n        }}\n        onComplete={value => {\n          if (!value.length) return;\n          getCanvas(src, value, (err, canvas) => {\n            if (!err) {\n              setClippedImg(canvas.toDataURL()); \n              setShow(true);\n              setSrc(null); \n            }\n          });\n        }}\n      />\n        {show && <img src={clippedImg} alt=\"\" />}\n      </div>\n  \n  );}\n"]},"metadata":{},"sourceType":"module"}