{"ast":null,"code":"import React from 'react';\nimport { Point, view, project, Symbol, Path } from 'paper';\nexport default function Visual() {\n  var count = 150; // Create a symbol, which we will use to place instances of later:\n\n  var path = new Path.Circle({\n    center: [0, 0],\n    radius: 10,\n    fillColor: 'white',\n    strokeColor: 'black'\n  });\n  var symbol = new Symbol(path); // Place the instances of the symbol:\n\n  for (var i = 0; i < count; i++) {\n    // The center position is a random point in the view:\n    var center = Point.random() * view.size;\n    var placedSymbol = symbol.place(center);\n    placedSymbol.scale(i / count);\n  } // The onFrame function is called up to 60 times a second:\n\n\n  function onFrame(event) {\n    // Run through the active layer's children list and change\n    // the position of the placed symbols:\n    for (var i = 0; i < count; i++) {\n      var item = project.activeLayer.children[i]; // Move the item 1/20th of its width to the right. This way\n      // larger circles move faster than smaller circles:\n\n      item.position.x += item.bounds.width / 20; // If the item has left the view on the right, move it back\n      // to the left:\n\n      if (item.bounds.left > view.size.width) {\n        item.position.x = -item.bounds.width;\n      }\n    }\n  }\n\n  return {\n    onFrame\n  };\n}\n_c = Visual;\n\nvar _c;\n\n$RefreshReg$(_c, \"Visual\");","map":{"version":3,"sources":["/Users/jielianglin/Desktop/projects/m-v2-prod/src/components/explore/Visual.js"],"names":["React","Point","view","project","Symbol","Path","Visual","count","path","Circle","center","radius","fillColor","strokeColor","symbol","i","random","size","placedSymbol","place","scale","onFrame","event","item","activeLayer","children","position","x","bounds","width","left"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,IAAf,EAAqBC,OAArB,EAA8BC,MAA9B,EAAsCC,IAAtC,QAAiD,OAAjD;AAEA,eAAe,SAASC,MAAT,GAAkB;AAE7B,MAAIC,KAAK,GAAG,GAAZ,CAF6B,CAIjC;;AACA,MAAIC,IAAI,GAAG,IAAIH,IAAI,CAACI,MAAT,CAAgB;AAC1BC,IAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CADkB;AAE1BC,IAAAA,MAAM,EAAE,EAFkB;AAG1BC,IAAAA,SAAS,EAAE,OAHe;AAI1BC,IAAAA,WAAW,EAAE;AAJa,GAAhB,CAAX;AAOA,MAAIC,MAAM,GAAG,IAAIV,MAAJ,CAAWI,IAAX,CAAb,CAZiC,CAcjC;;AACA,OAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,KAApB,EAA2BQ,CAAC,EAA5B,EAAgC;AAC/B;AACA,QAAIL,MAAM,GAAGT,KAAK,CAACe,MAAN,KAAiBd,IAAI,CAACe,IAAnC;AACA,QAAIC,YAAY,GAAGJ,MAAM,CAACK,KAAP,CAAaT,MAAb,CAAnB;AACAQ,IAAAA,YAAY,CAACE,KAAb,CAAmBL,CAAC,GAAGR,KAAvB;AACA,GApBgC,CAsBjC;;;AACA,WAASc,OAAT,CAAiBC,KAAjB,EAAwB;AACvB;AACA;AACA,SAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,KAApB,EAA2BQ,CAAC,EAA5B,EAAgC;AAC/B,UAAIQ,IAAI,GAAGpB,OAAO,CAACqB,WAAR,CAAoBC,QAApB,CAA6BV,CAA7B,CAAX,CAD+B,CAG/B;AACA;;AACAQ,MAAAA,IAAI,CAACG,QAAL,CAAcC,CAAd,IAAmBJ,IAAI,CAACK,MAAL,CAAYC,KAAZ,GAAoB,EAAvC,CAL+B,CAO/B;AACA;;AACA,UAAIN,IAAI,CAACK,MAAL,CAAYE,IAAZ,GAAmB5B,IAAI,CAACe,IAAL,CAAUY,KAAjC,EAAwC;AACvCN,QAAAA,IAAI,CAACG,QAAL,CAAcC,CAAd,GAAkB,CAACJ,IAAI,CAACK,MAAL,CAAYC,KAA/B;AACA;AACD;AACD;;AAEO,SACI;AAACR,IAAAA;AAAD,GADJ;AAIP;KA7CuBf,M","sourcesContent":["import React from 'react';\nimport {Point, view, project, Symbol, Path} from 'paper'; \n\nexport default function Visual() {\n    \n    var count = 150;\n\n// Create a symbol, which we will use to place instances of later:\nvar path = new Path.Circle({\n\tcenter: [0, 0],\n\tradius: 10,\n\tfillColor: 'white',\n\tstrokeColor: 'black'\n});\n\nvar symbol = new Symbol(path);\n\n// Place the instances of the symbol:\nfor (var i = 0; i < count; i++) {\n\t// The center position is a random point in the view:\n\tvar center = Point.random() * view.size;\n\tvar placedSymbol = symbol.place(center);\n\tplacedSymbol.scale(i / count);\n}\n\n// The onFrame function is called up to 60 times a second:\nfunction onFrame(event) {\n\t// Run through the active layer's children list and change\n\t// the position of the placed symbols:\n\tfor (var i = 0; i < count; i++) {\n\t\tvar item = project.activeLayer.children[i];\n\t\t\n\t\t// Move the item 1/20th of its width to the right. This way\n\t\t// larger circles move faster than smaller circles:\n\t\titem.position.x += item.bounds.width / 20;\n\n\t\t// If the item has left the view on the right, move it back\n\t\t// to the left:\n\t\tif (item.bounds.left > view.size.width) {\n\t\t\titem.position.x = -item.bounds.width;\n\t\t}\n\t}\n}\n\n        return (\n            {onFrame}\n        );\n\n}\n\n"]},"metadata":{},"sourceType":"module"}