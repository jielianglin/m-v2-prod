{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n  };\n\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\n/** @deprecated */\n\n\nfunction __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n}\n\nvar objectToClassName = function (obj) {\n  return Object.keys(obj).filter(function (key) {\n    return obj[key];\n  }).join(' ');\n};\n\nvar arePointsEqual = function (p1, p2) {\n  return p1.x === p2.x && p1.y === p2.y;\n};\n\nvar arePointListEqual = function (arr1, arr2) {\n  if (!arr1 && arr2 || arr1 && !arr2 || arr1.length !== arr2.length) return false;\n  return arr1.every(function (point, i) {\n    return arePointsEqual(point, arr2[i]);\n  });\n};\n\nvar roundPointCoordinates = function (_a, p) {\n  var x = _a.x,\n      y = _a.y;\n\n  if (p === void 0) {\n    p = 1;\n  }\n\n  return {\n    x: Math.round((x + Number.EPSILON) * p) / p,\n    y: Math.round((y + Number.EPSILON) * p) / p\n  };\n};\n\nvar findPointByPosition = function (points, position, r) {\n  if (r === void 0) {\n    r = 0;\n  }\n\n  var index = points.findIndex(function (point) {\n    return Math.max(Math.abs(point.x - position.x), Math.abs(point.y - position.y)) <= r;\n  });\n  return {\n    point: __assign({}, points[index]),\n    index: index\n  };\n};\n\nvar getDistance = function (p1, p2) {\n  return Math.hypot(p2.x - p1.x, p2.y - p1.y);\n};\n\nvar getAngle = function (p1, p2) {\n  return Math.atan2(p2.y - p1.y, p2.x - p1.x);\n};\n\nvar approximateToAnAngleMultiplicity = function (startPoint, endPoint, minAngle) {\n  var r = getDistance(startPoint, endPoint);\n  var angle = getAngle(startPoint, endPoint);\n  var newAngle = Math.round(angle / minAngle) * minAngle;\n  return {\n    x: startPoint.x + r * Math.cos(newAngle),\n    y: startPoint.y + r * Math.sin(newAngle)\n  };\n};\n\nvar approximateToAngles = function (startPoint, endPoint, angles) {\n  var r = getDistance(startPoint, endPoint);\n  var angle = getAngle(startPoint, endPoint);\n  var nearestAngle = angles.reduce(function (prev, now) {\n    return Math.abs(now - angle) < Math.abs(prev - angle) ? now : prev;\n  }, Infinity);\n\n  if (nearestAngle !== Infinity) {\n    endPoint.x = startPoint.x + r * Math.cos(nearestAngle);\n    endPoint.y = startPoint.y + r * Math.sin(nearestAngle);\n  }\n\n  return endPoint;\n};\n\nvar calculateAnglesBeetwenPoints = function (points) {\n  var angles = [];\n\n  for (var i = 1; i < points.length; i++) {\n    var alpha = Math.atan2(points[i].y - points[i - 1].y, points[i].x - points[i - 1].x);\n    var alpha2 = alpha + Math.PI;\n    angles.push(alpha, alpha2 > Math.PI ? alpha2 - 2 * Math.PI : alpha2);\n  }\n\n  return angles.filter(function (val, idx, arr) {\n    return arr.indexOf(val) === idx;\n  });\n};\n\nfunction getClippedImageCanvas(src, path, callback, crop) {\n  if (crop === void 0) {\n    crop = true;\n  }\n\n  var image = new Image();\n  image.crossOrigin = 'Anonymous';\n  var canvas = document.createElement('canvas');\n  var ctx = canvas.getContext('2d');\n\n  if (!ctx) {\n    return callback(new Error('CTX is null'), canvas);\n  }\n\n  image.onerror = function () {\n    callback(new Error('Failed to load image'), canvas);\n  };\n\n  image.onload = function () {\n    try {\n      canvas.width = image.naturalWidth + 2;\n      canvas.height = image.naturalHeight + 2;\n      ctx.drawImage(image, 0, 0);\n\n      if (path.length < 3) {\n        callback(null, canvas);\n        return;\n      }\n\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(canvas.width, 0);\n      ctx.lineTo(canvas.width, canvas.height);\n      ctx.lineTo(0, canvas.height);\n      ctx.lineTo(0, 0);\n      ctx.lineTo(path[0].x + 1, path[0].y + 1);\n      path.slice(1).forEach(function (_a) {\n        var x = _a.x,\n            y = _a.y;\n        return ctx.lineTo(x + 1, y + 1);\n      });\n      ctx.lineTo(path[0].x + 1, path[0].y + 1);\n      ctx.lineTo(0, 0);\n      ctx.closePath();\n      ctx.clip('evenodd');\n      ctx.globalCompositeOperation = 'destination-out';\n      ctx.fill();\n\n      if (crop) {\n        var xAxis = path.map(function (_a) {\n          var x = _a.x;\n          return x + 1;\n        });\n        var yAxis = path.map(function (_a) {\n          var y = _a.y;\n          return y + 1;\n        });\n        var _a = [Math.min.apply(null, xAxis), Math.min.apply(null, yAxis)],\n            minX = _a[0],\n            minY = _a[1];\n        var _b = [Math.max.apply(null, xAxis), Math.max.apply(null, yAxis)],\n            maxX = _b[0],\n            maxY = _b[1];\n        var _c = [maxX - minX, maxY - minY],\n            width = _c[0],\n            height = _c[1];\n        var imageData = ctx.getImageData(minX, minY, width, height);\n        canvas.width = width;\n        canvas.height = height;\n        ctx.putImageData(imageData, 0, 0);\n      }\n\n      callback(null, canvas);\n    } catch (err) {\n      callback(err, canvas);\n    }\n  };\n\n  image.src = src;\n}\n\nvar SVGHelper =\n/** @class */\nfunction () {\n  function SVGHelper(getSvgElement) {\n    this.getSvgElement = getSvgElement;\n  }\n\n  SVGHelper.prototype.getSvg = function () {\n    var svg = this.getSvgElement();\n    if (!svg) throw new Error('SVG is null');\n    return svg;\n  };\n\n  SVGHelper.prototype.getCTM = function () {\n    var ctm = this.getSvg().getCTM();\n    if (!ctm) throw new Error('CTM is null');\n    return ctm;\n  };\n\n  SVGHelper.prototype.getViewboxSize = function () {\n    return this.getSvg().viewBox.baseVal;\n  };\n\n  SVGHelper.prototype.getRealSize = function () {\n    return {\n      width: this.getSvg().width.baseVal.value,\n      height: this.getSvg().height.baseVal.value\n    };\n  };\n\n  SVGHelper.prototype.getViewboxOffset = function () {\n    var svg = this.getSvg();\n\n    var _a = this.getRealSize(),\n        rWidth = _a.width,\n        rHeight = _a.height;\n\n    var _b = this.getViewboxSize(),\n        vWidth = _b.width,\n        vHeight = _b.height;\n\n    var point = Object.assign(svg.createSVGPoint(), {\n      x: rWidth,\n      y: rHeight\n    });\n    var ctm = this.getCTM();\n\n    var _c = point.matrixTransform(ctm.inverse()),\n        x = _c.x,\n        y = _c.y; // only for preserveAspectRatio=\"xMidYMid meet\" !!!\n\n\n    return {\n      x: x - vWidth,\n      y: y - vHeight\n    };\n  };\n\n  SVGHelper.prototype.convertViewboxPointsToReal = function (points) {\n    var svg = this.getSvg();\n    var ctm = this.getCTM();\n    return points.map(function (_a) {\n      var x = _a.x,\n          y = _a.y;\n      var p = Object.assign(svg.createSVGPoint(), {\n        x: x,\n        y: y\n      }).matrixTransform(ctm);\n      return roundPointCoordinates(p);\n    });\n  };\n\n  SVGHelper.prototype.convertRealPointsToViewbox = function (points) {\n    var svg = this.getSvg();\n    var ctm = this.getCTM().inverse();\n    return points.map(function (_a) {\n      var x = _a.x,\n          y = _a.y;\n      var p = Object.assign(svg.createSVGPoint(), {\n        x: x,\n        y: y\n      }).matrixTransform(ctm);\n      return roundPointCoordinates(p, 1e3);\n    });\n  };\n\n  SVGHelper.prototype.getBorderPoints = function (repeatFirst) {\n    if (repeatFirst === void 0) {\n      repeatFirst = true;\n    }\n\n    var _a = this.getViewboxSize(),\n        width = _a.width,\n        height = _a.height;\n\n    var _b = this.getViewboxOffset(),\n        offsetX = _b.x,\n        offsetY = _b.y;\n\n    var arr = [{\n      x: -offsetX,\n      y: -offsetY\n    }, {\n      x: width + offsetX,\n      y: -offsetY\n    }, {\n      x: width + offsetX,\n      y: height + offsetY\n    }, {\n      x: -offsetX,\n      y: height + offsetY\n    }];\n\n    if (repeatFirst) {\n      arr.push({\n        x: -offsetX,\n        y: -offsetY\n      });\n    }\n\n    return arr;\n  };\n\n  SVGHelper.prototype.isAboveTheBorder = function (_a) {\n    var x = _a.x,\n        y = _a.y;\n\n    var _b = this.getViewboxSize(),\n        width = _b.width,\n        height = _b.height;\n\n    var _c = this.getViewboxOffset(),\n        offsetX = _c.x,\n        offsetY = _c.y;\n\n    return x < -offsetX || x > width + offsetX || y < -offsetY || y > height + offsetY;\n  };\n\n  SVGHelper.prototype.getMouseCoordinates = function (event) {\n    var e = event;\n\n    var _a = e.changedTouches && e.touches ? e.changedTouches[0] || e.touches[0] : e,\n        clientX = _a.clientX,\n        clientY = _a.clientY;\n\n    var svg = this.getSvg();\n    var ctm = svg.getScreenCTM();\n    if (!ctm) throw new Error('ScreenCTM is null');\n    var point = svg.createSVGPoint();\n    point.x = clientX;\n    point.y = clientY;\n\n    var _b = point.matrixTransform(ctm.inverse()),\n        x = _b.x,\n        y = _b.y;\n\n    return {\n      x: x,\n      y: y\n    };\n  };\n\n  return SVGHelper;\n}(); // eslint-disable-next-line @typescript-eslint/ban-types\n\n\nvar withDraggable = function (Component) {\n  return (\n    /** @class */\n    function (_super) {\n      __extends(DraggableHOC, _super);\n\n      function DraggableHOC() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n\n        _this.ref = React.createRef();\n        _this.svg = new SVGHelper(function () {\n          var _a, _b;\n\n          return (_b = (_a = _this.ref) === null || _a === void 0 ? void 0 : _a.current) === null || _b === void 0 ? void 0 : _b.ownerSVGElement;\n        });\n        _this.dragLastPosition = null;\n        _this.wasMoved = false;\n\n        _this.onMouseTouchDown = function (e) {\n          if (e.target === _this.ref.current && _this.props.draggable) {\n            e.stopImmediatePropagation();\n            e.preventDefault();\n            var target = e.target;\n            _this.dragLastPosition = _this.getMousePosition(e);\n\n            if (target.ownerSVGElement) {\n              target.ownerSVGElement.focus({\n                preventScroll: true\n              });\n            }\n          }\n        };\n\n        _this.onMouseTouchMove = function (e) {\n          if (_this.dragLastPosition) {\n            e.stopImmediatePropagation();\n            e.preventDefault();\n\n            var _a = _this.getMousePosition(e),\n                x = _a.x,\n                y = _a.y;\n\n            var dx = x - _this.dragLastPosition.x;\n            var dy = y - _this.dragLastPosition.y;\n\n            if (!_this.wasMoved && _this.props.onDragStart) {\n              _this.props.onDragStart({\n                x: _this.dragLastPosition.x,\n                y: _this.dragLastPosition.y,\n                dx: dx,\n                dy: dy\n              });\n            }\n\n            if (_this.props.onDrag) {\n              _this.props.onDrag({\n                dx: dx,\n                dy: dy\n              });\n            }\n\n            _this.dragLastPosition = {\n              x: x,\n              y: y\n            };\n            _this.wasMoved = true;\n          }\n        };\n\n        _this.onMouseTouchUp = function (e) {\n          if (_this.dragLastPosition && _this.wasMoved) {\n            e.stopImmediatePropagation();\n            e.preventDefault();\n\n            if (e instanceof MouseEvent || !e.touches) {\n              window.addEventListener('click', function (e) {\n                return e.stopPropagation();\n              }, {\n                capture: true,\n                once: true\n              });\n            }\n\n            if (_this.props.onDragEnd) {\n              _this.props.onDragEnd({\n                x: _this.dragLastPosition.x,\n                y: _this.dragLastPosition.y\n              });\n            }\n          }\n\n          _this.dragLastPosition = null;\n          _this.wasMoved = false;\n        };\n\n        return _this;\n      }\n\n      DraggableHOC.prototype.render = function () {\n        var _a = this.props,\n            draggable = _a.draggable;\n        _a.onDrag;\n        _a.onDragStart;\n        _a.onDragEnd;\n\n        var rest = __rest(_a, [\"draggable\", \"onDrag\", \"onDragStart\", \"onDragEnd\"]);\n\n        return React.createElement(Component, __assign({\n          ref: this.ref\n        }, rest, {\n          draggable: draggable\n        }));\n      };\n\n      DraggableHOC.prototype.componentDidUpdate = function (prevProps) {\n        if (prevProps.draggable && !this.props.draggable) {\n          // cleanup after props.draggable changed to false\n          if (this.dragLastPosition && this.wasMoved) {\n            if (this.props.onDragEnd) {\n              this.props.onDragEnd({\n                x: this.dragLastPosition.x,\n                y: this.dragLastPosition.y\n              });\n            }\n\n            this.dragLastPosition = null;\n            this.wasMoved = false;\n          }\n        }\n      };\n\n      DraggableHOC.prototype.componentDidMount = function () {\n        window.addEventListener('mousedown', this.onMouseTouchDown, true);\n        window.addEventListener('mousemove', this.onMouseTouchMove, true);\n        window.addEventListener('mouseup', this.onMouseTouchUp, true);\n        window.addEventListener('touchstart', this.onMouseTouchDown, true);\n        window.addEventListener('touchmove', this.onMouseTouchMove, true);\n        window.addEventListener('touchend', this.onMouseTouchUp, true);\n      };\n\n      DraggableHOC.prototype.componentWillUnmount = function () {\n        window.removeEventListener('mousedown', this.onMouseTouchDown);\n        window.removeEventListener('mousemove', this.onMouseTouchMove);\n        window.removeEventListener('mouseup', this.onMouseTouchUp);\n        window.removeEventListener('touchstart', this.onMouseTouchDown);\n        window.removeEventListener('touchmove', this.onMouseTouchMove);\n        window.removeEventListener('touchend', this.onMouseTouchUp);\n      };\n\n      DraggableHOC.prototype.getMousePosition = function (ev) {\n        var e = ev;\n        return this.svg.getMouseCoordinates(e);\n      };\n\n      return DraggableHOC;\n    }(React.Component)\n  );\n};\n\nvar SVGPolyline = withDraggable(React.forwardRef(function SVGPolyline(_a, ref) {\n  var path = _a.path,\n      animate = _a.animate,\n      draggable = _a.draggable;\n  return React.createElement(\"polyline\", {\n    ref: ref,\n    style: {\n      cursor: draggable ? 'move' : ''\n    },\n    points: path.map(function (_a) {\n      var x = _a.x,\n          y = _a.y;\n      return x + \",\" + y;\n    }).join(' '),\n    fill: \"rgba(0,0,0,0)\",\n    stroke: \"white\",\n    strokeWidth: \"1.5\",\n    shapeRendering: \"geometricPrecision\",\n    strokeDasharray: \"3\",\n    strokeDashoffset: \"0\",\n    vectorEffect: \"non-scaling-stroke\"\n  }, animate && React.createElement(\"animate\", {\n    attributeName: \"stroke-dashoffset\",\n    values: \"0;1000;0\",\n    dur: \"100s\",\n    repeatCount: \"indefinite\"\n  }));\n}));\n\nfunction SVGPolygon(_a) {\n  var path = _a.path;\n  return React.createElement(\"polygon\", {\n    style: {\n      pointerEvents: 'none',\n      transform: 'translate(-1px, -1px)'\n    },\n    points: path.map(function (_a) {\n      var x = _a.x,\n          y = _a.y;\n      return x + \",\" + y;\n    }).join(' '),\n    fill: \"rgba(0, 0, 0, 0.5)\",\n    fillRule: \"evenodd\",\n    stroke: \"null\",\n    shapeRendering: \"geometricPrecision\"\n  });\n}\n\nvar SVGPoint = withDraggable(React.forwardRef(function SVGPoint(_a, ref) {\n  var x = _a.x,\n      y = _a.y,\n      onClickTouchEvent = _a.onClickTouchEvent,\n      draggable = _a.draggable,\n      style = _a.style;\n\n  var _b = style.cursor,\n      cursor = _b === void 0 ? draggable ? 'move' : 'default' : _b,\n      rest = __rest(style, [\"cursor\"]);\n\n  return React.createElement(\"rect\", {\n    style: __assign({\n      cursor: cursor\n    }, rest),\n    ref: ref,\n    x: x - 10,\n    y: y - 10,\n    onClick: function (e) {\n      e.stopPropagation();\n      e.preventDefault();\n      onClickTouchEvent(e);\n    },\n    onTouchEnd: function (e) {\n      e.stopPropagation();\n      e.preventDefault();\n      onClickTouchEvent(e);\n    },\n    width: \"20px\",\n    height: \"20\",\n    fill: \"rgba(0, 0, 0, 0)\",\n    stroke: \"white\",\n    strokeWidth: \"1.25\",\n    vectorEffect: \"non-scaling-stroke\"\n  });\n}));\nvar pathActions;\n\n(function (pathActions) {\n  pathActions[\"ADD\"] = \"ADD\";\n  pathActions[\"DELETE\"] = \"DELETE\";\n  pathActions[\"MODIFY\"] = \"MODIFY\";\n  pathActions[\"MOVE\"] = \"MOVE\";\n  pathActions[\"RESET\"] = \"RESET\";\n  pathActions[\"CHANGE\"] = \"CHANGE\";\n})(pathActions || (pathActions = {}));\n\nfunction pathReducer(state, action) {\n  var length = state.points.length;\n\n  switch (action.type) {\n    case pathActions.ADD:\n      {\n        if (state.closed) return [state, false];\n\n        if (length > 0 && arePointsEqual(state.points[length - 1], action.payload) || length > 1 && arePointsEqual(state.points[length - 2], action.payload)) {\n          return [state, false];\n        }\n\n        var needToBeClosed = length > 2 && arePointsEqual(state.points[0], action.payload);\n        if (needToBeClosed) return [{\n          points: __spreadArrays(state.points),\n          closed: true\n        }, true];\n        return [{\n          points: __spreadArrays(state.points, [action.payload]),\n          closed: false\n        }, true];\n      }\n\n    case pathActions.DELETE:\n      {\n        return [{\n          points: __spreadArrays(state.points.filter(function (_, idx) {\n            return action.payload !== idx;\n          })),\n          closed: length > 4 && state.closed\n        }, true];\n      }\n\n    case pathActions.MODIFY:\n      {\n        var _a = state.points[action.payload.index],\n            sx_1 = _a.x,\n            sy_1 = _a.y;\n        var newPoints = state.points.map(function (_a) {\n          var x = _a.x,\n              y = _a.y;\n\n          if (x === sx_1 && y === sy_1) {\n            return {\n              x: action.payload.x,\n              y: action.payload.y\n            };\n          }\n\n          return {\n            x: x,\n            y: y\n          };\n        });\n        return [{\n          points: newPoints,\n          closed: state.closed\n        }, !!(action.payload.x || action.payload.y)];\n      }\n\n    case pathActions.MOVE:\n      {\n        return [{\n          points: state.points.map(function (_a) {\n            var x = _a.x,\n                y = _a.y;\n            return {\n              x: x + action.payload.x,\n              y: y + action.payload.y\n            };\n          }),\n          closed: state.closed\n        }, !!(action.payload.x || action.payload.y)];\n      }\n\n    case pathActions.CHANGE:\n      {\n        var wasModified = !arePointListEqual(action.payload, state.points);\n        return [{\n          points: action.payload,\n          closed: wasModified ? action.payload.length > 2 : state.closed\n        }, wasModified];\n      }\n\n    case pathActions.RESET:\n      return [{\n        points: [],\n        closed: false\n      }, !!state.points.length];\n\n    default:\n      return [state, false];\n  }\n}\n\nvar ReactLasso =\n/** @class */\nfunction (_super) {\n  __extends(ReactLasso, _super);\n\n  function ReactLasso(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.imageRef = React.createRef();\n    _this.svgRef = React.createRef();\n    _this.svg = new SVGHelper(function () {\n      var _a;\n\n      return (_a = _this.svgRef) === null || _a === void 0 ? void 0 : _a.current;\n    });\n    _this.angles = [];\n    _this.path = {\n      points: [],\n      closed: false\n    };\n    _this.lastEmittedPoints = [];\n    _this.lastUpdatedPoints = [];\n    _this.imgError = false;\n    _this.setPathFromPropsOnMediaLoad = true;\n\n    _this.hidePointer = function () {\n      var lastPoint = _this.path.points[_this.path.points.length - 1] || {\n        x: 0,\n        y: 0\n      };\n\n      _this.setPointer(__assign({}, lastPoint), true); // tricky way to hide pointer line\n\n    }; // Events\n\n\n    _this.onShapeDrag = function (_a) {\n      var dx = _a.dx,\n          dy = _a.dy;\n\n      var newPath = _this.path.points.map(function (_a) {\n        var x = _a.x,\n            y = _a.y;\n        return {\n          x: x + dx,\n          y: y + dy\n        };\n      });\n\n      if (!newPath.some(function (point) {\n        return _this.svg.isAboveTheBorder(point);\n      })) {\n        _this.dispatchPathAction({\n          type: pathActions.MOVE,\n          payload: {\n            x: dx,\n            y: dy\n          }\n        });\n      }\n    };\n\n    _this.onPointDrag = function (idx, _a) {\n      var dx = _a.dx,\n          dy = _a.dy;\n\n      var point = __assign({}, _this.path.points[idx]);\n\n      point.x += dx;\n      point.y += dy;\n\n      if (!_this.svg.isAboveTheBorder(point)) {\n        _this.dispatchPathAction({\n          type: pathActions.MODIFY,\n          payload: __assign(__assign({}, point), {\n            index: idx\n          })\n        });\n      }\n    };\n\n    _this.onPointClick = function (idx) {\n      if (_this.isLoaded() && !_this.props.disabled && !_this.path.closed) {\n        _this.dispatchPathAction({\n          type: pathActions.ADD,\n          payload: _this.path.points[idx]\n        });\n      }\n    };\n\n    _this.onDragEnd = function () {\n      _this.checkIfPathUpdated(false);\n    };\n\n    _this.onMediaLoaded = function (e) {\n      if (_this.setPathFromPropsOnMediaLoad) {\n        _this.setPathStateFromProps();\n\n        _this.setPathFromPropsOnMediaLoad = false;\n      }\n\n      _this.imgError = false;\n\n      _this.props.onImageLoad(e);\n    };\n\n    _this.onMediaError = function (e) {\n      _this.dispatchPathAction({\n        type: pathActions.RESET\n      });\n\n      _this.imgError = true;\n\n      _this.props.onImageError(e);\n    };\n\n    _this.onClickTouchEvent = function (e) {\n      if (_this.isLoaded() && !_this.props.disabled) {\n        if (_this.path.closed) {\n          if (e.target === _this.svgRef.current) {\n            _this.dispatchPathAction({\n              type: pathActions.RESET\n            });\n          }\n\n          return;\n        }\n\n        var pointer = _this.getMousePosition(e)[0];\n\n        if (!_this.svg.isAboveTheBorder(pointer)) {\n          _this.dispatchPathAction({\n            type: pathActions.ADD,\n            payload: roundPointCoordinates(pointer, 1e3),\n            pointer: pointer\n          });\n        } else {\n          _this.hidePointer();\n        }\n      }\n    };\n\n    _this.onClick = function (e) {\n      _this.onClickTouchEvent(e);\n    };\n\n    _this.onTouchEnd = function (e) {\n      if (e.cancelable) {\n        e.preventDefault();\n\n        _this.onClickTouchEvent(e);\n      }\n\n      _this.hidePointer();\n    };\n\n    _this.onMouseTouchMove = function (e) {\n      if (_this.isLoaded()) {\n        var pointer = _this.getMousePosition(e)[0];\n\n        _this.setPointer(pointer);\n      }\n    };\n\n    _this.onContextMenu = function (e) {\n      if (_this.isLoaded()) {\n        e.preventDefault();\n\n        if (!_this.props.disabled && !_this.path.closed) {\n          var _a = _this.getMousePosition(e),\n              pointer = _a[0],\n              index = _a[1].index;\n\n          if (index > -1) {\n            _this.dispatchPathAction({\n              type: pathActions.DELETE,\n              payload: index,\n              pointer: pointer\n            });\n          } else {\n            _this.setPointer(pointer);\n          }\n        }\n      }\n    };\n\n    _this.state = {\n      path: {\n        points: [],\n        closed: false\n      },\n      pointer: {\n        x: props.viewBox.width / 2,\n        y: props.viewBox.width / 2\n      }\n    };\n    return _this;\n  }\n\n  ReactLasso.prototype.render = function () {\n    var _this = this;\n\n    return React.createElement(\"div\", {\n      className: objectToClassName({\n        ReactFreeSelect__Component: true,\n        ReactFreeSelect__Closed: this.state.path.closed,\n        ReactFreeSelect__Disabled: this.props.disabled\n      }),\n      style: __assign({\n        display: 'inline-block',\n        position: 'relative',\n        margin: '0',\n        padding: '0',\n        fontSize: '0',\n        cursor: this.props.disabled ? 'not-allowed' : 'default'\n      }, this.props.style)\n    }, React.createElement(\"img\", {\n      ref: this.imageRef,\n      src: this.props.src,\n      alt: this.props.imageAlt,\n      crossOrigin: this.props.crossOrigin,\n      style: this.props.imageStyle,\n      onLoad: this.onMediaLoaded,\n      onError: this.onMediaError\n    }), React.createElement(\"svg\", {\n      ref: this.svgRef,\n      style: {\n        position: 'absolute',\n        top: '0',\n        left: '0',\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n        userSelect: 'none',\n        touchAction: 'none'\n      },\n      viewBox: \"0 0 \" + this.props.viewBox.width + \" \" + this.props.viewBox.height,\n      onMouseMove: this.onMouseTouchMove,\n      onTouchMove: this.onMouseTouchMove,\n      onClick: this.onClick,\n      onTouchEnd: this.onTouchEnd,\n      onContextMenu: this.onContextMenu,\n      onMouseLeave: this.hidePointer\n    }, !!this.state.path.points.length && React.createElement(SVGPolygon, {\n      path: this.getPolygonPoints()\n    }), React.createElement(SVGPolyline, {\n      draggable: this.state.path.closed && !this.props.disabled,\n      onDrag: this.onShapeDrag,\n      onDragEnd: this.onDragEnd,\n      animate: !this.props.disabled,\n      path: this.getPolylinePoints()\n    }), this.getRoundedPoints().map(function (_a, idx) {\n      var x = _a.x,\n          y = _a.y;\n      return React.createElement(SVGPoint, {\n        key: idx,\n        x: x,\n        y: y,\n        draggable: !_this.props.disabled,\n        style: {\n          cursor: !idx && _this.state.path.points.length > 2 && !_this.state.path.closed ? 'pointer' : undefined\n        },\n        onDrag: function (_a) {\n          var dx = _a.dx,\n              dy = _a.dy;\n          return _this.onPointDrag(idx, {\n            dx: dx,\n            dy: dy\n          });\n        },\n        onDragEnd: _this.onDragEnd,\n        onClickTouchEvent: function () {\n          return _this.onPointClick(idx);\n        }\n      });\n    })));\n  };\n\n  ReactLasso.prototype.componentDidUpdate = function (prevProps) {\n    if (!prevProps.disabled && this.props.disabled && !this.path.closed) {\n      this.hidePointer();\n    }\n\n    if (prevProps.src && prevProps.src !== this.props.src) {\n      this.dispatchPathAction({\n        type: pathActions.RESET\n      });\n    } else if (!arePointListEqual(prevProps.value, this.props.value)) {\n      if (this.isLoaded()) {\n        this.setPathStateFromProps();\n      } else {\n        this.setPathFromPropsOnMediaLoad = true;\n      }\n    }\n  };\n\n  ReactLasso.prototype.convertPoints = function (points) {\n    var aspectRatio = this.getAspectRatio();\n    return this.svg.convertViewboxPointsToReal(points).map(function (_a) {\n      var x = _a.x,\n          y = _a.y;\n      return {\n        x: Math.round(x / aspectRatio.x),\n        y: Math.round(y / aspectRatio.y)\n      };\n    });\n  };\n\n  ReactLasso.prototype.checkIfPathUpdated = function (wasClosedBefore) {\n    if (this.path.closed || wasClosedBefore) {\n      var convertedPoints = this.convertPoints(this.path.points);\n\n      if (!arePointListEqual(convertedPoints, this.lastUpdatedPoints)) {\n        this.emitOnComplete(convertedPoints);\n        this.lastUpdatedPoints = convertedPoints.map(function (_a) {\n          var x = _a.x,\n              y = _a.y;\n          return {\n            x: x,\n            y: y\n          };\n        });\n      }\n    }\n  };\n\n  ReactLasso.prototype.emitOnChange = function (_a) {\n    var points = _a.points;\n\n    if (this.props.onChange) {\n      var convertedPoints = this.convertPoints(points);\n      this.lastEmittedPoints = convertedPoints;\n      this.props.onChange(convertedPoints);\n    }\n  };\n\n  ReactLasso.prototype.emitOnComplete = function (convertedPoints) {\n    if (this.props.onComplete) {\n      this.props.onComplete(convertedPoints);\n    }\n  };\n\n  ReactLasso.prototype.setPointer = function (_a, force) {\n    var x = _a.x,\n        y = _a.y;\n\n    if (force === void 0) {\n      force = false;\n    }\n\n    if (force || !this.props.disabled) {\n      this.setState({\n        path: this.path,\n        pointer: {\n          x: x,\n          y: y\n        }\n      });\n    }\n  };\n\n  ReactLasso.prototype.dispatchPathAction = function (action) {\n    var wasClosedBefore = this.path.closed;\n\n    var _a = pathReducer(this.path, action),\n        newPathState = _a[0],\n        wasModified = _a[1];\n\n    newPathState.points = newPathState.points.map(function (point) {\n      return roundPointCoordinates(point, 1e3);\n    });\n\n    if (wasModified) {\n      this.path = newPathState;\n      this.setState({\n        pointer: action.pointer || this.path.points[this.path.points.length - 1] || {\n          x: 0,\n          y: 0\n        },\n        path: newPathState\n      });\n      this.angles = calculateAnglesBeetwenPoints(newPathState.points);\n      this.emitOnChange(newPathState);\n\n      if (![pathActions.MODIFY, pathActions.MOVE].includes(action.type)) {\n        this.checkIfPathUpdated(wasClosedBefore); // optimized version of onChange\n      }\n    }\n  };\n\n  ReactLasso.prototype.isLoaded = function () {\n    if (this.imgError || !this.svgRef.current) return false;\n    var svg = this.svgRef.current;\n    return !!(svg.width.baseVal.value && svg.height.baseVal.value);\n  };\n\n  ReactLasso.prototype.getAspectRatio = function () {\n    if (!this.imageRef.current) {\n      return {\n        x: NaN,\n        y: NaN\n      };\n    } // original * aspectRatio = size\n\n\n    return {\n      x: this.imageRef.current.clientWidth / this.imageRef.current.naturalWidth,\n      y: this.imageRef.current.clientHeight / this.imageRef.current.naturalHeight\n    };\n  };\n\n  ReactLasso.prototype.setPathStateFromProps = function () {\n    if (arePointListEqual(this.lastEmittedPoints, this.props.value)) return;\n    var aspectRatio = this.getAspectRatio();\n    var value = this.svg.convertRealPointsToViewbox(this.props.value.map(function (_a) {\n      var x = _a.x,\n          y = _a.y;\n      return {\n        x: x * aspectRatio.x,\n        y: y * aspectRatio.y\n      };\n    }));\n    this.dispatchPathAction({\n      type: pathActions.CHANGE,\n      payload: value\n    });\n  };\n\n  ReactLasso.prototype.getRoundedPoints = function () {\n    return this.state.path.points.map(function (point) {\n      return roundPointCoordinates(point);\n    });\n  };\n\n  ReactLasso.prototype.getBorder = function () {\n    return this.svg.getBorderPoints().map(function (point) {\n      return roundPointCoordinates(point);\n    }).map(function (_a) {\n      var x = _a.x,\n          y = _a.y;\n      return {\n        x: x - 1,\n        y: y + 1\n      };\n    }); // fishy bug here so i have to margin area\n  };\n\n  ReactLasso.prototype.getPolygonPoints = function () {\n    var roundedPoints = this.getRoundedPoints();\n    var border = this.getBorder();\n    return this.state.path.closed ? __spreadArrays(border, roundedPoints, [roundedPoints[0], border[0]]) : border;\n  };\n\n  ReactLasso.prototype.getPolylinePoints = function () {\n    var roundedPoints = this.getRoundedPoints();\n    return roundedPoints.concat(this.state.path.closed ? roundedPoints[0] : roundPointCoordinates(this.state.pointer));\n  };\n\n  ReactLasso.prototype.getMousePosition = function (e, lookupForNearlyPoints, lookupForApproximation) {\n    if (lookupForNearlyPoints === void 0) {\n      lookupForNearlyPoints = true;\n    }\n\n    if (lookupForApproximation === void 0) {\n      lookupForApproximation = true;\n    }\n\n    var pointer = this.svg.getMouseCoordinates(e);\n\n    if (lookupForApproximation) {\n      var ctrlCmdPressed = navigator.platform.includes('Mac') ? e.metaKey : e.ctrlKey;\n      var lastPoint = this.path.points[this.path.points.length - 1]; // straighten path from last point\n\n      if (ctrlCmdPressed && lastPoint) {\n        if (e.shiftKey) {\n          // lookup for parallel lines\n          pointer = approximateToAngles(lastPoint, pointer, this.angles);\n        } else {\n          // angle approximation to 15 deg\n          pointer = approximateToAnAngleMultiplicity(lastPoint, pointer, Math.PI / 12);\n        }\n      }\n    }\n\n    var _a = findPointByPosition(this.path.points, pointer, 10),\n        point = _a.point,\n        index = _a.index;\n\n    if (lookupForNearlyPoints && index > -1) {\n      pointer = __assign({}, point);\n    }\n\n    return [pointer, {\n      point: point,\n      index: index\n    }];\n  };\n\n  ReactLasso.propTypes = {\n    value: PropTypes.arrayOf(PropTypes.exact({\n      x: PropTypes.number.isRequired,\n      y: PropTypes.number.isRequired\n    })),\n    style: PropTypes.shape({}),\n    viewBox: PropTypes.exact({\n      width: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired\n    }),\n    disabled: PropTypes.bool,\n    onChange: PropTypes.func,\n    onComplete: PropTypes.func,\n    src: PropTypes.string.isRequired,\n    imageAlt: PropTypes.string,\n    crossOrigin: PropTypes.string,\n    imageStyle: PropTypes.shape({}),\n    onImageLoad: PropTypes.func,\n    onImageError: PropTypes.func\n  };\n  ReactLasso.defaultProps = {\n    value: [],\n    style: {},\n    imageStyle: {},\n    viewBox: {\n      width: 1e3,\n      height: 1e3\n    },\n    disabled: false,\n    onImageError: Function.prototype,\n    onImageLoad: Function.prototype\n  };\n  return ReactLasso;\n}(React.Component);\n\nexport default ReactLasso;\nexport { ReactLasso as Component, ReactLasso, getClippedImageCanvas as getCanvas };","map":{"version":3,"sources":["../src/helpers.ts","../src/SVGHelpers.ts","../src/withDraggable.tsx","../src/SVGPolyline.tsx","../src/SVGPolygon.tsx","../src/SVGPoint.tsx","../src/pathReducer.ts","../src/index.tsx"],"names":[],"mappings":"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","sourcesContent":["export interface Point {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface Vector {\r\n  dx: number;\r\n  dy: number;\r\n}\r\n\r\nexport interface Size {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport interface Dictionary<T> {\r\n  [key: string]: T;\r\n}\r\n\r\nexport type touchOrMouseEvent<T> = React.MouseEvent<T, MouseEvent> | React.TouchEvent<T>;\r\nexport type touchAndMouseEvent<T> = React.MouseEvent<T, MouseEvent> & React.TouchEvent<T>;\r\n\r\nexport const objectToClassName = (obj: Dictionary<boolean>) => {\r\n  return Object.keys(obj)\r\n    .filter((key) => obj[key])\r\n    .join(' ');\r\n};\r\n\r\nexport const arePointsEqual = (p1: Point, p2: Point) => p1.x === p2.x && p1.y === p2.y;\r\n\r\nexport const arePointListEqual = (arr1: Point[], arr2: Point[]) => {\r\n  if ((!arr1 && arr2) || (arr1 && !arr2) || arr1.length !== arr2.length) return false;\r\n  return arr1.every((point, i) => arePointsEqual(point, arr2[i]));\r\n};\r\n\r\nexport const roundPointCoordinates = ({ x, y }: Point, p = 1): Point => ({\r\n  x: Math.round((x + Number.EPSILON) * p) / p,\r\n  y: Math.round((y + Number.EPSILON) * p) / p\r\n});\r\n\r\nexport const findPointByPosition = (\r\n  points: Point[],\r\n  position: Point,\r\n  r = 0\r\n): { point: Point; index: number } => {\r\n  const index = points.findIndex(\r\n    (point) => Math.max(Math.abs(point.x - position.x), Math.abs(point.y - position.y)) <= r\r\n  );\r\n  return { point: { ...points[index] }, index };\r\n};\r\n\r\nexport const getDistance = (p1: Point, p2: Point) => {\r\n  return Math.hypot(p2.x - p1.x, p2.y - p1.y);\r\n};\r\n\r\nexport const getAngle = (p1: Point, p2: Point) => {\r\n  return Math.atan2(p2.y - p1.y, p2.x - p1.x);\r\n};\r\n\r\nexport const approximateToAnAngleMultiplicity = (\r\n  startPoint: Point,\r\n  endPoint: Point,\r\n  minAngle: number\r\n): Point => {\r\n  const r = getDistance(startPoint, endPoint);\r\n  const angle = getAngle(startPoint, endPoint);\r\n  const newAngle = Math.round(angle / minAngle) * minAngle;\r\n  return {\r\n    x: startPoint.x + r * Math.cos(newAngle),\r\n    y: startPoint.y + r * Math.sin(newAngle)\r\n  };\r\n};\r\n\r\nexport const approximateToAngles = (\r\n  startPoint: Point,\r\n  endPoint: Point,\r\n  angles: number[]\r\n): Point => {\r\n  const r = getDistance(startPoint, endPoint);\r\n  const angle = getAngle(startPoint, endPoint);\r\n  const nearestAngle = angles.reduce(\r\n    (prev, now) => (Math.abs(now - angle) < Math.abs(prev - angle) ? now : prev),\r\n    Infinity\r\n  );\r\n  if (nearestAngle !== Infinity) {\r\n    endPoint.x = startPoint.x + r * Math.cos(nearestAngle);\r\n    endPoint.y = startPoint.y + r * Math.sin(nearestAngle);\r\n  }\r\n  return endPoint;\r\n};\r\n\r\nexport const calculateAnglesBeetwenPoints = (points: Point[]) => {\r\n  const angles: number[] = [];\r\n  for (let i = 1; i < points.length; i++) {\r\n    const alpha = Math.atan2(points[i].y - points[i - 1].y, points[i].x - points[i - 1].x);\r\n    const alpha2 = alpha + Math.PI;\r\n    angles.push(alpha, alpha2 > Math.PI ? alpha2 - 2 * Math.PI : alpha2);\r\n  }\r\n  return angles.filter((val, idx, arr) => arr.indexOf(val) === idx);\r\n};\r\n\r\nexport function getClippedImageCanvas(\r\n  src: string,\r\n  path: Point[],\r\n  callback: (err: Error | null, canvas: HTMLCanvasElement) => void,\r\n  crop = true\r\n) {\r\n  const image = new Image();\r\n  image.crossOrigin = 'Anonymous';\r\n  const canvas = document.createElement('canvas');\r\n  const ctx = canvas.getContext('2d');\r\n  if (!ctx) {\r\n    return callback(new Error('CTX is null'), canvas);\r\n  }\r\n  image.onerror = () => {\r\n    callback(new Error('Failed to load image'), canvas);\r\n  };\r\n  image.onload = () => {\r\n    try {\r\n      canvas.width = image.naturalWidth + 2;\r\n      canvas.height = image.naturalHeight + 2;\r\n      ctx.drawImage(image, 0, 0);\r\n      if (path.length < 3) {\r\n        callback(null, canvas);\r\n        return;\r\n      }\r\n      ctx.beginPath();\r\n      ctx.moveTo(0, 0);\r\n      ctx.lineTo(canvas.width, 0);\r\n      ctx.lineTo(canvas.width, canvas.height);\r\n      ctx.lineTo(0, canvas.height);\r\n      ctx.lineTo(0, 0);\r\n      ctx.lineTo(path[0].x + 1, path[0].y + 1);\r\n      path.slice(1).forEach(({ x, y }) => ctx.lineTo(x + 1, y + 1));\r\n      ctx.lineTo(path[0].x + 1, path[0].y + 1);\r\n      ctx.lineTo(0, 0);\r\n      ctx.closePath();\r\n      ctx.clip('evenodd');\r\n      ctx.globalCompositeOperation = 'destination-out';\r\n      ctx.fill();\r\n      if (crop) {\r\n        const xAxis = path.map(({ x }) => x + 1);\r\n        const yAxis = path.map(({ y }) => y + 1);\r\n        const [minX, minY] = [Math.min.apply(null, xAxis), Math.min.apply(null, yAxis)];\r\n        const [maxX, maxY] = [Math.max.apply(null, xAxis), Math.max.apply(null, yAxis)];\r\n        const [width, height] = [maxX - minX, maxY - minY];\r\n        const imageData = ctx.getImageData(minX, minY, width, height);\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        ctx.putImageData(imageData, 0, 0);\r\n      }\r\n      callback(null, canvas);\r\n    } catch (err) {\r\n      callback(err, canvas);\r\n    }\r\n  };\r\n  image.src = src;\r\n}\r\n","import { Point, roundPointCoordinates, Size, touchOrMouseEvent } from './helpers';\r\n\r\nexport class SVGHelper {\r\n  public getSvgElement: () => SVGSVGElement | null | undefined;\r\n  constructor(getSvgElement: () => SVGSVGElement | null | undefined) {\r\n    this.getSvgElement = getSvgElement;\r\n  }\r\n  getSvg() {\r\n    const svg = this.getSvgElement();\r\n    if (!svg) throw new Error('SVG is null');\r\n    return svg;\r\n  }\r\n  getCTM() {\r\n    const ctm = this.getSvg().getCTM();\r\n    if (!ctm) throw new Error('CTM is null');\r\n    return ctm;\r\n  }\r\n  getViewboxSize() {\r\n    return this.getSvg().viewBox.baseVal;\r\n  }\r\n  getRealSize(): Size {\r\n    return {\r\n      width: this.getSvg().width.baseVal.value,\r\n      height: this.getSvg().height.baseVal.value\r\n    };\r\n  }\r\n  getViewboxOffset(): Point {\r\n    const svg = this.getSvg();\r\n    const { width: rWidth, height: rHeight } = this.getRealSize();\r\n    const { width: vWidth, height: vHeight } = this.getViewboxSize();\r\n    const point = Object.assign(svg.createSVGPoint(), {\r\n      x: rWidth,\r\n      y: rHeight\r\n    });\r\n    const ctm = this.getCTM();\r\n    const { x, y } = point.matrixTransform(ctm.inverse());\r\n    // only for preserveAspectRatio=\"xMidYMid meet\" !!!\r\n    return {\r\n      x: x - vWidth,\r\n      y: y - vHeight\r\n    };\r\n  }\r\n  convertViewboxPointsToReal(points: Point[]): Point[] {\r\n    const svg = this.getSvg();\r\n    const ctm = this.getCTM();\r\n    return points.map(({ x, y }) => {\r\n      const p = Object.assign(svg.createSVGPoint(), { x, y }).matrixTransform(ctm);\r\n      return roundPointCoordinates(p);\r\n    });\r\n  }\r\n  convertRealPointsToViewbox(points: Point[]): Point[] {\r\n    const svg = this.getSvg();\r\n    const ctm = this.getCTM().inverse();\r\n    return points.map(({ x, y }) => {\r\n      const p = Object.assign(svg.createSVGPoint(), { x, y }).matrixTransform(ctm);\r\n      return roundPointCoordinates(p, 1e3);\r\n    });\r\n  }\r\n  getBorderPoints(repeatFirst = true) {\r\n    const { width, height } = this.getViewboxSize();\r\n    const { x: offsetX, y: offsetY } = this.getViewboxOffset();\r\n    const arr: Point[] = [\r\n      { x: -offsetX, y: -offsetY },\r\n      { x: width + offsetX, y: -offsetY },\r\n      { x: width + offsetX, y: height + offsetY },\r\n      { x: -offsetX, y: height + offsetY }\r\n    ];\r\n    if (repeatFirst) {\r\n      arr.push({ x: -offsetX, y: -offsetY });\r\n    }\r\n    return arr;\r\n  }\r\n  isAboveTheBorder({ x, y }: Point) {\r\n    const { width, height } = this.getViewboxSize();\r\n    const { x: offsetX, y: offsetY } = this.getViewboxOffset();\r\n    return x < -offsetX || x > width + offsetX || y < -offsetY || y > height + offsetY;\r\n  }\r\n  getMouseCoordinates(event: touchOrMouseEvent<SVGSVGElement>): Point {\r\n    const e = event as React.MouseEvent<SVGSVGElement, MouseEvent> &\r\n      React.TouchEvent<SVGSVGElement>;\r\n    const { clientX, clientY } =\r\n      e.changedTouches && e.touches ? e.changedTouches[0] || e.touches[0] : e;\r\n    const svg = this.getSvg();\r\n    const ctm = svg.getScreenCTM();\r\n    if (!ctm) throw new Error('ScreenCTM is null');\r\n    const point = svg.createSVGPoint();\r\n    point.x = clientX;\r\n    point.y = clientY;\r\n    const { x, y } = point.matrixTransform(ctm.inverse());\r\n    return { x, y };\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { SVGHelper } from './SVGHelpers';\r\n\r\nimport { Point, Vector, touchOrMouseEvent } from './helpers';\r\n\r\nexport interface WithDraggableProps {\r\n  draggable: boolean;\r\n  onDragStart?: (arg: Point & Vector) => void;\r\n  onDrag?: (arg: Vector) => void;\r\n  onDragEnd?: (arg: Point) => void;\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nexport const withDraggable = <P extends object>(Component: React.ComponentType<P>) =>\r\n  class DraggableHOC extends React.Component<P & WithDraggableProps> {\r\n    public ref = React.createRef<SVGSVGElement>();\r\n    public svg = new SVGHelper(() => this.ref?.current?.ownerSVGElement);\r\n    public dragLastPosition: null | Point = null;\r\n    public wasMoved = false;\r\n    render() {\r\n      const { draggable, onDrag, onDragStart, onDragEnd, ...rest } = this.props;\r\n      return <Component ref={this.ref} {...(rest as P)} draggable={draggable} />;\r\n    }\r\n    componentDidUpdate(prevProps: WithDraggableProps) {\r\n      if (prevProps.draggable && !this.props.draggable) {\r\n        // cleanup after props.draggable changed to false\r\n        if (this.dragLastPosition && this.wasMoved) {\r\n          if (this.props.onDragEnd) {\r\n            this.props.onDragEnd({\r\n              x: this.dragLastPosition.x,\r\n              y: this.dragLastPosition.y\r\n            });\r\n          }\r\n          this.dragLastPosition = null;\r\n          this.wasMoved = false;\r\n        }\r\n      }\r\n    }\r\n    componentDidMount() {\r\n      window.addEventListener('mousedown', this.onMouseTouchDown, true);\r\n      window.addEventListener('mousemove', this.onMouseTouchMove, true);\r\n      window.addEventListener('mouseup', this.onMouseTouchUp, true);\r\n      window.addEventListener('touchstart', this.onMouseTouchDown, true);\r\n      window.addEventListener('touchmove', this.onMouseTouchMove, true);\r\n      window.addEventListener('touchend', this.onMouseTouchUp, true);\r\n    }\r\n    componentWillUnmount() {\r\n      window.removeEventListener('mousedown', this.onMouseTouchDown);\r\n      window.removeEventListener('mousemove', this.onMouseTouchMove);\r\n      window.removeEventListener('mouseup', this.onMouseTouchUp);\r\n      window.removeEventListener('touchstart', this.onMouseTouchDown);\r\n      window.removeEventListener('touchmove', this.onMouseTouchMove);\r\n      window.removeEventListener('touchend', this.onMouseTouchUp);\r\n    }\r\n    getMousePosition(ev: TouchEvent | MouseEvent) {\r\n      const e = (ev as unknown) as touchOrMouseEvent<SVGSVGElement>;\r\n      return this.svg.getMouseCoordinates(e);\r\n    }\r\n    onMouseTouchDown = (e: TouchEvent | MouseEvent) => {\r\n      if (e.target === this.ref.current && this.props.draggable) {\r\n        e.stopImmediatePropagation();\r\n        e.preventDefault();\r\n        const target = e.target as EventTarget & SVGSVGElement;\r\n        this.dragLastPosition = this.getMousePosition(e);\r\n        if (target.ownerSVGElement) {\r\n          target.ownerSVGElement.focus({ preventScroll: true });\r\n        }\r\n      }\r\n    };\r\n    onMouseTouchMove = (e: TouchEvent | MouseEvent) => {\r\n      if (this.dragLastPosition) {\r\n        e.stopImmediatePropagation();\r\n        e.preventDefault();\r\n        const { x, y } = this.getMousePosition(e);\r\n        const dx = x - this.dragLastPosition.x;\r\n        const dy = y - this.dragLastPosition.y;\r\n        if (!this.wasMoved && this.props.onDragStart) {\r\n          this.props.onDragStart({\r\n            x: this.dragLastPosition.x,\r\n            y: this.dragLastPosition.y,\r\n            dx,\r\n            dy\r\n          });\r\n        }\r\n        if (this.props.onDrag) {\r\n          this.props.onDrag({ dx, dy });\r\n        }\r\n        this.dragLastPosition = { x, y };\r\n        this.wasMoved = true;\r\n      }\r\n    };\r\n    onMouseTouchUp = (e: TouchEvent | MouseEvent) => {\r\n      if (this.dragLastPosition && this.wasMoved) {\r\n        e.stopImmediatePropagation();\r\n        e.preventDefault();\r\n        if (e instanceof MouseEvent || !e.touches) {\r\n          window.addEventListener('click', (e) => e.stopPropagation(), {\r\n            capture: true,\r\n            once: true\r\n          });\r\n        }\r\n        if (this.props.onDragEnd) {\r\n          this.props.onDragEnd({\r\n            x: this.dragLastPosition.x,\r\n            y: this.dragLastPosition.y\r\n          });\r\n        }\r\n      }\r\n      this.dragLastPosition = null;\r\n      this.wasMoved = false;\r\n    };\r\n  };\r\n","import React from 'react';\r\nimport { withDraggable } from './withDraggable';\r\nimport { Point } from './helpers';\r\n\r\nexport interface SVGPolylineProps {\r\n  path: Point[];\r\n  animate: boolean;\r\n  draggable: boolean;\r\n}\r\n\r\nexport const SVGPolyline = withDraggable(\r\n  React.forwardRef<SVGPolylineElement, SVGPolylineProps>(function SVGPolyline(\r\n    { path, animate, draggable },\r\n    ref\r\n  ) {\r\n    return (\r\n      <polyline\r\n        ref={ref}\r\n        style={{ cursor: draggable ? 'move' : '' }}\r\n        points={path.map(({ x, y }) => `${x},${y}`).join(' ')}\r\n        fill=\"rgba(0,0,0,0)\"\r\n        stroke=\"white\"\r\n        strokeWidth=\"1.5\"\r\n        shapeRendering=\"geometricPrecision\"\r\n        strokeDasharray=\"3\"\r\n        strokeDashoffset=\"0\"\r\n        vectorEffect=\"non-scaling-stroke\"\r\n      >\r\n        {animate && (\r\n          <animate\r\n            attributeName=\"stroke-dashoffset\"\r\n            values=\"0;1000;0\"\r\n            dur=\"100s\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        )}\r\n      </polyline>\r\n    );\r\n  })\r\n);\r\n","import React from 'react';\r\nimport { Point } from './helpers';\r\n\r\nexport interface SVGPolygonProps {\r\n  path: Point[];\r\n}\r\n\r\nexport function SVGPolygon({ path }: SVGPolygonProps) {\r\n  return (\r\n    <polygon\r\n      style={{\r\n        pointerEvents: 'none',\r\n        transform: 'translate(-1px, -1px)'\r\n      }}\r\n      points={path.map(({ x, y }) => `${x},${y}`).join(' ')}\r\n      fill=\"rgba(0, 0, 0, 0.5)\"\r\n      fillRule=\"evenodd\"\r\n      stroke=\"null\"\r\n      shapeRendering=\"geometricPrecision\"\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { withDraggable } from './withDraggable';\r\nimport { Point } from './helpers';\r\n\r\nexport interface SVGPointProps extends Point {\r\n  style: React.CSSProperties;\r\n  draggable: boolean;\r\n  onClickTouchEvent: (e: React.MouseEvent | React.TouchEvent) => void;\r\n}\r\n\r\nexport const SVGPoint = withDraggable(\r\n  React.forwardRef<SVGRectElement, SVGPointProps>(function SVGPoint(\r\n    { x, y, onClickTouchEvent, draggable, style },\r\n    ref\r\n  ) {\r\n    const { cursor = draggable ? 'move' : 'default', ...rest } = style;\r\n    return (\r\n      <rect\r\n        style={{\r\n          cursor,\r\n          ...rest\r\n        }}\r\n        ref={ref}\r\n        x={x - 10}\r\n        y={y - 10}\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          e.preventDefault();\r\n          onClickTouchEvent(e);\r\n        }}\r\n        onTouchEnd={(e) => {\r\n          e.stopPropagation();\r\n          e.preventDefault();\r\n          onClickTouchEvent(e);\r\n        }}\r\n        width=\"20px\"\r\n        height=\"20\"\r\n        fill=\"rgba(0, 0, 0, 0)\"\r\n        stroke=\"white\"\r\n        strokeWidth=\"1.25\"\r\n        vectorEffect=\"non-scaling-stroke\"\r\n        // vectorEffect=\"non-scaling-size\" will be featured in SVG 2.0!\r\n      />\r\n    );\r\n  })\r\n);\r\n","import { arePointListEqual, arePointsEqual, Point } from './helpers';\r\n\r\nexport enum pathActions {\r\n  ADD = 'ADD',\r\n  DELETE = 'DELETE',\r\n  MODIFY = 'MODIFY',\r\n  MOVE = 'MOVE',\r\n  RESET = 'RESET',\r\n  CHANGE = 'CHANGE'\r\n}\r\n\r\nexport type pathReducerAction =\r\n  | { type: pathActions.ADD; payload: Point }\r\n  | { type: pathActions.DELETE; payload: number }\r\n  | { type: pathActions.MODIFY; payload: { index: number } & Point }\r\n  | { type: pathActions.MOVE; payload: Point }\r\n  | { type: pathActions.RESET }\r\n  | { type: pathActions.CHANGE; payload: Point[] };\r\nexport interface PathState {\r\n  points: Point[];\r\n  closed: boolean;\r\n}\r\n\r\nexport function pathReducer(state: PathState, action: pathReducerAction): [PathState, boolean] {\r\n  const length = state.points.length;\r\n  switch (action.type) {\r\n    case pathActions.ADD: {\r\n      if (state.closed) return [state, false];\r\n      if (\r\n        (length > 0 && arePointsEqual(state.points[length - 1], action.payload)) ||\r\n        (length > 1 && arePointsEqual(state.points[length - 2], action.payload))\r\n      ) {\r\n        return [state, false];\r\n      }\r\n      const needToBeClosed = length > 2 && arePointsEqual(state.points[0], action.payload);\r\n      if (needToBeClosed) return [{ points: [...state.points], closed: true }, true];\r\n      return [{ points: [...state.points, action.payload], closed: false }, true];\r\n    }\r\n    case pathActions.DELETE: {\r\n      return [\r\n        {\r\n          points: [...state.points.filter((_, idx) => action.payload !== idx)],\r\n          closed: length > 4 && state.closed\r\n        },\r\n        true\r\n      ];\r\n    }\r\n    case pathActions.MODIFY: {\r\n      const { x: sx, y: sy } = state.points[action.payload.index];\r\n      const newPoints = state.points.map(({ x, y }) => {\r\n        if (x === sx && y === sy) {\r\n          return {\r\n            x: action.payload.x,\r\n            y: action.payload.y\r\n          };\r\n        }\r\n        return { x, y };\r\n      });\r\n      return [\r\n        { points: newPoints, closed: state.closed },\r\n        !!(action.payload.x || action.payload.y)\r\n      ];\r\n    }\r\n    case pathActions.MOVE: {\r\n      return [\r\n        {\r\n          points: state.points.map(({ x, y }) => ({\r\n            x: x + action.payload.x,\r\n            y: y + action.payload.y\r\n          })),\r\n          closed: state.closed\r\n        },\r\n        !!(action.payload.x || action.payload.y)\r\n      ];\r\n    }\r\n    case pathActions.CHANGE: {\r\n      const wasModified = !arePointListEqual(action.payload, state.points);\r\n      return [\r\n        {\r\n          points: action.payload,\r\n          closed: wasModified ? action.payload.length > 2 : state.closed\r\n        },\r\n        wasModified\r\n      ];\r\n    }\r\n    case pathActions.RESET:\r\n      return [{ points: [], closed: false }, !!state.points.length];\r\n    default:\r\n      return [state, false];\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { SVGPolyline } from './SVGPolyline';\r\nimport { SVGPolygon } from './SVGPolygon';\r\nimport { SVGPoint } from './SVGPoint';\r\nimport { SVGHelper } from './SVGHelpers';\r\n\r\nimport {\r\n  roundPointCoordinates,\r\n  arePointListEqual,\r\n  objectToClassName,\r\n  getClippedImageCanvas,\r\n  Point,\r\n  Vector,\r\n  touchOrMouseEvent,\r\n  Size,\r\n  approximateToAnAngleMultiplicity,\r\n  approximateToAngles,\r\n  calculateAnglesBeetwenPoints,\r\n  findPointByPosition\r\n} from './helpers';\r\n\r\nimport { pathReducer, pathActions, pathReducerAction, PathState } from './pathReducer';\r\n\r\nexport interface ReactLassoProps {\r\n  src: string;\r\n  value: Point[];\r\n  style: React.CSSProperties;\r\n  viewBox: Size;\r\n  disabled: boolean;\r\n  imageStyle: React.CSSProperties;\r\n  onImageLoad: (e: React.SyntheticEvent<HTMLImageElement, Event>) => void;\r\n  onImageError: (e: React.SyntheticEvent<HTMLImageElement, Event>) => void;\r\n  onChange?: (path: Point[]) => void;\r\n  onComplete?: (path: Point[]) => void;\r\n  imageAlt?: string;\r\n  crossOrigin?: 'anonymous' | 'use-credentials' | '';\r\n}\r\n\r\nexport interface ReactLassoState {\r\n  path: PathState;\r\n  pointer: Point;\r\n}\r\n\r\nexport class ReactLasso extends React.Component<ReactLassoProps, ReactLassoState> {\r\n  public state: ReactLassoState;\r\n  public imageRef = React.createRef<HTMLImageElement>();\r\n  public svgRef = React.createRef<SVGSVGElement>();\r\n  public svg = new SVGHelper(() => this.svgRef?.current);\r\n  public angles: number[] = [];\r\n  public path: PathState = {\r\n    points: [],\r\n    closed: false\r\n  };\r\n  public lastEmittedPoints: Point[] = [];\r\n  public lastUpdatedPoints: Point[] = [];\r\n  public imgError = false;\r\n  public setPathFromPropsOnMediaLoad = true;\r\n  constructor(props: ReactLassoProps) {\r\n    super(props);\r\n    this.state = {\r\n      path: {\r\n        points: [],\r\n        closed: false\r\n      },\r\n      pointer: {\r\n        x: props.viewBox.width / 2,\r\n        y: props.viewBox.width / 2\r\n      }\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        className={objectToClassName({\r\n          ReactFreeSelect__Component: true,\r\n          ReactFreeSelect__Closed: this.state.path.closed,\r\n          ReactFreeSelect__Disabled: this.props.disabled\r\n        })}\r\n        style={{\r\n          display: 'inline-block',\r\n          position: 'relative',\r\n          margin: '0',\r\n          padding: '0',\r\n          fontSize: '0',\r\n          cursor: this.props.disabled ? 'not-allowed' : 'default',\r\n          ...this.props.style\r\n        }}\r\n      >\r\n        <img\r\n          ref={this.imageRef}\r\n          src={this.props.src}\r\n          alt={this.props.imageAlt}\r\n          crossOrigin={this.props.crossOrigin}\r\n          style={this.props.imageStyle}\r\n          onLoad={this.onMediaLoaded}\r\n          onError={this.onMediaError}\r\n        />\r\n        <svg\r\n          ref={this.svgRef}\r\n          style={{\r\n            position: 'absolute',\r\n            top: '0',\r\n            left: '0',\r\n            width: '100%',\r\n            height: '100%',\r\n            overflow: 'hidden',\r\n            userSelect: 'none',\r\n            touchAction: 'none'\r\n          }}\r\n          viewBox={`0 0 ${this.props.viewBox.width} ${this.props.viewBox.height}`}\r\n          onMouseMove={this.onMouseTouchMove}\r\n          onTouchMove={this.onMouseTouchMove}\r\n          onClick={this.onClick}\r\n          onTouchEnd={this.onTouchEnd}\r\n          onContextMenu={this.onContextMenu}\r\n          onMouseLeave={this.hidePointer}\r\n        >\r\n          {!!this.state.path.points.length && <SVGPolygon path={this.getPolygonPoints()} />}\r\n          <SVGPolyline\r\n            draggable={this.state.path.closed && !this.props.disabled}\r\n            onDrag={this.onShapeDrag}\r\n            onDragEnd={this.onDragEnd}\r\n            animate={!this.props.disabled}\r\n            path={this.getPolylinePoints()}\r\n          />\r\n          {this.getRoundedPoints().map(({ x, y }, idx) => (\r\n            <SVGPoint\r\n              key={idx}\r\n              x={x}\r\n              y={y}\r\n              draggable={!this.props.disabled}\r\n              style={{\r\n                cursor:\r\n                  !idx && this.state.path.points.length > 2 && !this.state.path.closed\r\n                    ? 'pointer'\r\n                    : undefined\r\n              }}\r\n              onDrag={({ dx, dy }) => this.onPointDrag(idx, { dx, dy })}\r\n              onDragEnd={this.onDragEnd}\r\n              onClickTouchEvent={() => this.onPointClick(idx)}\r\n            />\r\n          ))}\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n  componentDidUpdate(prevProps: ReactLassoProps) {\r\n    if (!prevProps.disabled && this.props.disabled && !this.path.closed) {\r\n      this.hidePointer();\r\n    }\r\n    if (prevProps.src && prevProps.src !== this.props.src) {\r\n      this.dispatchPathAction({ type: pathActions.RESET });\r\n    } else if (!arePointListEqual(prevProps.value, this.props.value)) {\r\n      if (this.isLoaded()) {\r\n        this.setPathStateFromProps();\r\n      } else {\r\n        this.setPathFromPropsOnMediaLoad = true;\r\n      }\r\n    }\r\n  }\r\n  convertPoints(points: Point[]): Point[] {\r\n    const aspectRatio = this.getAspectRatio();\r\n    return this.svg.convertViewboxPointsToReal(points).map(({ x, y }) => ({\r\n      x: Math.round(x / aspectRatio.x),\r\n      y: Math.round(y / aspectRatio.y)\r\n    }));\r\n  }\r\n  checkIfPathUpdated(wasClosedBefore: boolean) {\r\n    if (this.path.closed || wasClosedBefore) {\r\n      const convertedPoints = this.convertPoints(this.path.points);\r\n      if (!arePointListEqual(convertedPoints, this.lastUpdatedPoints)) {\r\n        this.emitOnComplete(convertedPoints);\r\n        this.lastUpdatedPoints = convertedPoints.map(({ x, y }) => ({ x, y }));\r\n      }\r\n    }\r\n  }\r\n  emitOnChange({ points }: PathState) {\r\n    if (this.props.onChange) {\r\n      const convertedPoints = this.convertPoints(points);\r\n      this.lastEmittedPoints = convertedPoints;\r\n      this.props.onChange(convertedPoints);\r\n    }\r\n  }\r\n  emitOnComplete(convertedPoints: Point[]) {\r\n    if (this.props.onComplete) {\r\n      this.props.onComplete(convertedPoints);\r\n    }\r\n  }\r\n  setPointer({ x, y }: Point, force = false) {\r\n    if (force || !this.props.disabled) {\r\n      this.setState({\r\n        path: this.path,\r\n        pointer: { x, y }\r\n      });\r\n    }\r\n  }\r\n  hidePointer = () => {\r\n    const lastPoint = this.path.points[this.path.points.length - 1] || {\r\n      x: 0,\r\n      y: 0\r\n    };\r\n    this.setPointer({ ...lastPoint }, true); // tricky way to hide pointer line\r\n  };\r\n  dispatchPathAction(action: pathReducerAction & { pointer?: Point }) {\r\n    const wasClosedBefore = this.path.closed;\r\n    const [newPathState, wasModified] = pathReducer(this.path, action);\r\n    newPathState.points = newPathState.points.map((point) => roundPointCoordinates(point, 1e3));\r\n    if (wasModified) {\r\n      this.path = newPathState;\r\n      this.setState({\r\n        pointer: action.pointer || this.path.points[this.path.points.length - 1] || { x: 0, y: 0 },\r\n        path: newPathState\r\n      });\r\n      this.angles = calculateAnglesBeetwenPoints(newPathState.points);\r\n      this.emitOnChange(newPathState);\r\n      if (![pathActions.MODIFY, pathActions.MOVE].includes(action.type)) {\r\n        this.checkIfPathUpdated(wasClosedBefore); // optimized version of onChange\r\n      }\r\n    }\r\n  }\r\n  isLoaded() {\r\n    if (this.imgError || !this.svgRef.current) return false;\r\n    const svg = this.svgRef.current;\r\n    return !!(svg.width.baseVal.value && svg.height.baseVal.value);\r\n  }\r\n  getAspectRatio(): Point {\r\n    if (!this.imageRef.current) {\r\n      return { x: NaN, y: NaN };\r\n    }\r\n    // original * aspectRatio = size\r\n    return {\r\n      x: this.imageRef.current.clientWidth / this.imageRef.current.naturalWidth,\r\n      y: this.imageRef.current.clientHeight / this.imageRef.current.naturalHeight\r\n    };\r\n  }\r\n  setPathStateFromProps() {\r\n    if (arePointListEqual(this.lastEmittedPoints, this.props.value)) return;\r\n    const aspectRatio = this.getAspectRatio();\r\n    const value = this.svg.convertRealPointsToViewbox(\r\n      this.props.value.map(({ x, y }) => ({\r\n        x: x * aspectRatio.x,\r\n        y: y * aspectRatio.y\r\n      }))\r\n    );\r\n    this.dispatchPathAction({\r\n      type: pathActions.CHANGE,\r\n      payload: value\r\n    });\r\n  }\r\n  getRoundedPoints() {\r\n    return this.state.path.points.map((point) => roundPointCoordinates(point));\r\n  }\r\n  getBorder(): Point[] {\r\n    return this.svg\r\n      .getBorderPoints()\r\n      .map((point) => roundPointCoordinates(point))\r\n      .map(({ x, y }) => ({ x: x - 1, y: y + 1 })); // fishy bug here so i have to margin area\r\n  }\r\n  getPolygonPoints(): Point[] {\r\n    const roundedPoints = this.getRoundedPoints();\r\n    const border = this.getBorder();\r\n    return this.state.path.closed\r\n      ? [...border, ...roundedPoints, roundedPoints[0], border[0]]\r\n      : border;\r\n  }\r\n  getPolylinePoints(): Point[] {\r\n    const roundedPoints = this.getRoundedPoints();\r\n    return roundedPoints.concat(\r\n      this.state.path.closed ? roundedPoints[0] : roundPointCoordinates(this.state.pointer)\r\n    );\r\n  }\r\n  getMousePosition(\r\n    e: touchOrMouseEvent<SVGSVGElement>,\r\n    lookupForNearlyPoints = true,\r\n    lookupForApproximation = true\r\n  ): [Point, { point: Point; index: number }] {\r\n    let pointer = this.svg.getMouseCoordinates(e);\r\n    if (lookupForApproximation) {\r\n      const ctrlCmdPressed = navigator.platform.includes('Mac') ? e.metaKey : e.ctrlKey;\r\n      const lastPoint = this.path.points[this.path.points.length - 1];\r\n      // straighten path from last point\r\n      if (ctrlCmdPressed && lastPoint) {\r\n        if (e.shiftKey) {\r\n          // lookup for parallel lines\r\n          pointer = approximateToAngles(lastPoint, pointer, this.angles);\r\n        } else {\r\n          // angle approximation to 15 deg\r\n          pointer = approximateToAnAngleMultiplicity(lastPoint, pointer, Math.PI / 12);\r\n        }\r\n      }\r\n    }\r\n    const { point, index } = findPointByPosition(this.path.points, pointer, 10);\r\n    if (lookupForNearlyPoints && index > -1) {\r\n      pointer = { ...point };\r\n    }\r\n    return [pointer, { point, index }];\r\n  }\r\n  // Events\r\n  onShapeDrag = ({ dx, dy }: Vector) => {\r\n    const newPath = this.path.points.map(({ x, y }) => ({\r\n      x: x + dx,\r\n      y: y + dy\r\n    }));\r\n    if (!newPath.some((point) => this.svg.isAboveTheBorder(point))) {\r\n      this.dispatchPathAction({\r\n        type: pathActions.MOVE,\r\n        payload: { x: dx, y: dy }\r\n      });\r\n    }\r\n  };\r\n  onPointDrag = (idx: number, { dx, dy }: Vector) => {\r\n    const point = { ...this.path.points[idx] };\r\n    point.x += dx;\r\n    point.y += dy;\r\n    if (!this.svg.isAboveTheBorder(point)) {\r\n      this.dispatchPathAction({\r\n        type: pathActions.MODIFY,\r\n        payload: { ...point, index: idx }\r\n      });\r\n    }\r\n  };\r\n  onPointClick = (idx: number) => {\r\n    if (this.isLoaded() && !this.props.disabled && !this.path.closed) {\r\n      this.dispatchPathAction({\r\n        type: pathActions.ADD,\r\n        payload: this.path.points[idx]\r\n      });\r\n    }\r\n  };\r\n  onDragEnd = () => {\r\n    this.checkIfPathUpdated(false);\r\n  };\r\n  onMediaLoaded = (e: React.SyntheticEvent<HTMLImageElement, Event>) => {\r\n    if (this.setPathFromPropsOnMediaLoad) {\r\n      this.setPathStateFromProps();\r\n      this.setPathFromPropsOnMediaLoad = false;\r\n    }\r\n    this.imgError = false;\r\n    this.props.onImageLoad(e);\r\n  };\r\n  onMediaError = (e: React.SyntheticEvent<HTMLImageElement, Event>) => {\r\n    this.dispatchPathAction({ type: pathActions.RESET });\r\n    this.imgError = true;\r\n    this.props.onImageError(e);\r\n  };\r\n  onClickTouchEvent = (e: touchOrMouseEvent<SVGSVGElement>) => {\r\n    if (this.isLoaded() && !this.props.disabled) {\r\n      if (this.path.closed) {\r\n        if (e.target === this.svgRef.current) {\r\n          this.dispatchPathAction({\r\n            type: pathActions.RESET\r\n          });\r\n        }\r\n        return;\r\n      }\r\n      const [pointer] = this.getMousePosition(e);\r\n      if (!this.svg.isAboveTheBorder(pointer)) {\r\n        this.dispatchPathAction({\r\n          type: pathActions.ADD,\r\n          payload: roundPointCoordinates(pointer, 1e3),\r\n          pointer\r\n        });\r\n      } else {\r\n        this.hidePointer();\r\n      }\r\n    }\r\n  };\r\n  onClick = (e: React.MouseEvent<SVGSVGElement, MouseEvent>) => {\r\n    this.onClickTouchEvent(e);\r\n  };\r\n  onTouchEnd = (e: React.TouchEvent<SVGSVGElement>) => {\r\n    if (e.cancelable) {\r\n      e.preventDefault();\r\n      this.onClickTouchEvent(e);\r\n    }\r\n    this.hidePointer();\r\n  };\r\n  onMouseTouchMove = (e: touchOrMouseEvent<SVGSVGElement>) => {\r\n    if (this.isLoaded()) {\r\n      const [pointer] = this.getMousePosition(e);\r\n      this.setPointer(pointer);\r\n    }\r\n  };\r\n  onContextMenu = (e: React.MouseEvent<SVGSVGElement, MouseEvent>) => {\r\n    if (this.isLoaded()) {\r\n      e.preventDefault();\r\n      if (!this.props.disabled && !this.path.closed) {\r\n        const [pointer, { index }] = this.getMousePosition(e);\r\n        if (index > -1) {\r\n          this.dispatchPathAction({\r\n            type: pathActions.DELETE,\r\n            payload: index,\r\n            pointer\r\n          });\r\n        } else {\r\n          this.setPointer(pointer);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  static propTypes = {\r\n    value: PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n        x: PropTypes.number.isRequired,\r\n        y: PropTypes.number.isRequired\r\n      })\r\n    ),\r\n    style: PropTypes.shape({}),\r\n    viewBox: PropTypes.exact({\r\n      width: PropTypes.number.isRequired,\r\n      height: PropTypes.number.isRequired\r\n    }),\r\n    disabled: PropTypes.bool,\r\n    onChange: PropTypes.func,\r\n    onComplete: PropTypes.func,\r\n    src: PropTypes.string.isRequired,\r\n    imageAlt: PropTypes.string,\r\n    crossOrigin: PropTypes.string,\r\n    imageStyle: PropTypes.shape({}),\r\n    onImageLoad: PropTypes.func,\r\n    onImageError: PropTypes.func\r\n  };\r\n  static defaultProps = {\r\n    value: [],\r\n    style: {},\r\n    imageStyle: {},\r\n    viewBox: { width: 1e3, height: 1e3 },\r\n    disabled: false,\r\n    onImageError: Function.prototype,\r\n    onImageLoad: Function.prototype\r\n  };\r\n}\r\n\r\nexport { ReactLasso as default, ReactLasso as Component, getClippedImageCanvas as getCanvas };\r\n"]},"metadata":{},"sourceType":"module"}