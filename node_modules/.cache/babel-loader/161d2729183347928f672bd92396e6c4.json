{"ast":null,"code":"var _jsxFileName = \"/Users/jielianglin/Desktop/m-v2/my-app/src/pages/home/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport UploadButton from \"../../components/upload/uploadButton/UploadButton\";\nimport ExploreButton from \"../../components/explore/exploreButton/ExploreButton\";\nimport ExploreMode from \"./ExploreMode\";\nimport { useSpring, animated } from \"react-spring\";\nimport { Transition } from \"react-transition-group\";\nimport testimage1 from \"./testimage1/testimage1.png\";\nimport testimage2 from \"./testimage2/testimage2.png\";\nimport testimage3 from \"./testimage3/testimage3.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: \"100px\",\n    flexShrink: 1\n  },\n  paper: {\n    padding: theme.spacing(8),\n    textAlign: \"center\",\n    backgroundColor: \"#E5E5E5\"\n  }\n}));\n\nconst Intro = ({\n  in: inProp\n}) => /*#__PURE__*/_jsxDEV(Transition, {\n  in: inProp,\n  timeout: {\n    enter: 500,\n    exit: 500\n  },\n  children: state => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: { ...defaultStyle,\n      ...transitionStyles[state],\n      textAlign: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        children: \"What is essential is invisible to the eye. -Antoine St. Exupery (1943)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 3\n}, this);\n\n_c = Intro;\nconst defaultStyle = {\n  transition: `transform 5000ms, opacity 5000ms ease`,\n  opacity: 1\n};\nconst transitionStyles = {\n  entering: {\n    opacity: 0\n  },\n  entered: {\n    opacity: 1\n  }\n};\nexport default function Gallery() {\n  _s();\n\n  const classes = useStyles();\n  const [galleryMode, exploreMode] = React.useState(false);\n  const [displayShuffle, setDisplayShuffle] = React.useState([]);\n  const [mount, setMount] = React.useState(false);\n  const [seconds, setSeconds] = React.useState(5);\n  const foo = React.useRef();\n  const [isToggled, setToggle] = React.useState(false);\n  const fade = useSpring({\n    opacity: isToggled ? 1 : 0\n  });\n\n  const changeMode = () => {\n    exploreMode(true);\n  };\n\n  useEffect(() => {\n    setMount(true);\n\n    function tick() {\n      setSeconds(prevSeconds => prevSeconds - 1);\n    }\n\n    foo.current = setInterval(() => tick(), 1000);\n  }, []);\n  useEffect(() => {\n    if (seconds === 0) {\n      clearInterval(foo.current);\n      setMount(false);\n    }\n  }, [seconds]);\n\n  var shuffle = require(\"shuffle-array\"),\n      items = [/*#__PURE__*/_jsxDEV(UploadButton, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    elevation: 0\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n    src: testimage2,\n    alt: \"\",\n    width: \"110px\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    elevation: 0\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n    src: testimage1,\n    alt: \"\",\n    width: \"110px\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    elevation: 0\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n    src: testimage3,\n    alt: \"\",\n    width: \"110px\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(ExploreButton, {\n    changeMode: changeMode\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 7\n  }, this)];\n\n  const row = items.map((item, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this));\n  React.useEffect(() => {\n    setToggle(!isToggled);\n    setDisplayShuffle(shuffle(row));\n  }, [shuffle, row, isToggled]);\n\n  if (galleryMode) {\n    return /*#__PURE__*/_jsxDEV(ExploreMode, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Intro, {\n        in: mount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(animated.div, {\n        style: fade,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.root,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            flexdirection: \"row\",\n            flexWrap: \"wrap\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            maxWidth: \"800px\",\n            minWidth: \"100px\",\n            margin: \"0 auto\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              display: \"flex\",\n              flexDirection: \"column\",\n              justify: \"center\",\n              alignItems: \"center\",\n              spacing: 10,\n              children: displayShuffle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Gallery, \"Vsr5l2DC4XDM4pd9lZX5x2lxqJ8=\", false, function () {\n  return [useStyles, useSpring];\n});\n\n_c2 = Gallery;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Intro\");\n$RefreshReg$(_c2, \"Gallery\");","map":{"version":3,"sources":["/Users/jielianglin/Desktop/m-v2/my-app/src/pages/home/Home.js"],"names":["React","useEffect","makeStyles","Paper","Grid","Box","Typography","UploadButton","ExploreButton","ExploreMode","useSpring","animated","Transition","testimage1","testimage2","testimage3","useStyles","theme","root","paddingTop","flexShrink","paper","padding","spacing","textAlign","backgroundColor","Intro","in","inProp","enter","exit","state","defaultStyle","transitionStyles","transition","opacity","entering","entered","Gallery","classes","galleryMode","exploreMode","useState","displayShuffle","setDisplayShuffle","mount","setMount","seconds","setSeconds","foo","useRef","isToggled","setToggle","fade","changeMode","tick","prevSeconds","current","setInterval","clearInterval","shuffle","require","items","row","map","item","index"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport UploadButton from \"../../components/upload/uploadButton/UploadButton\";\nimport ExploreButton from \"../../components/explore/exploreButton/ExploreButton\";\nimport ExploreMode from \"./ExploreMode\";\nimport { useSpring, animated } from \"react-spring\";\n\nimport { Transition } from \"react-transition-group\";\nimport testimage1 from \"./testimage1/testimage1.png\";\nimport testimage2 from \"./testimage2/testimage2.png\";\nimport testimage3 from \"./testimage3/testimage3.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: \"100px\",\n    flexShrink: 1,\n  },\n  paper: {\n    padding: theme.spacing(8),\n    textAlign: \"center\",\n    backgroundColor: \"#E5E5E5\",\n  },\n}));\n\nconst Intro = ({ in: inProp }) => (\n  <Transition in={inProp} timeout={{ enter: 500, exit: 500 }}>\n    {(state) => (\n      <div\n        style={{\n          ...defaultStyle,\n          ...transitionStyles[state],\n          textAlign: \"center\",\n        }}\n      >\n        <Typography>\n          <i>\n            What is essential is invisible to the eye. -Antoine St. Exupery\n            (1943)\n          </i>\n        </Typography>\n      </div>\n    )}\n  </Transition>\n);\n\nconst defaultStyle = {\n  transition: `transform 5000ms, opacity 5000ms ease`,\n  opacity: 1,\n};\n\nconst transitionStyles = {\n  entering: { opacity: 0 },\n  entered: { opacity: 1 },\n};\n\nexport default function Gallery() {\n  const classes = useStyles();\n  const [galleryMode, exploreMode] = React.useState(false);\n  const [displayShuffle, setDisplayShuffle] = React.useState([]);\n  const [mount, setMount] = React.useState(false);\n  const [seconds, setSeconds] = React.useState(5);\n  const foo = React.useRef();\n  const [isToggled, setToggle] = React.useState(false);\n\n  const fade = useSpring({\n    opacity: isToggled ? 1 : 0,\n  });\n\n  const changeMode = () => {\n    exploreMode(true);\n  };\n\n  useEffect(() => {\n    setMount(true);\n    function tick() {\n      setSeconds((prevSeconds) => prevSeconds - 1);\n    }\n    foo.current = setInterval(() => tick(), 1000);\n  }, []);\n\n  useEffect(() => {\n    if (seconds === 0) {\n      clearInterval(foo.current);\n      setMount(false);\n    }\n  }, [seconds]);\n\n  var shuffle = require(\"shuffle-array\"),\n    items = [\n      <UploadButton />,\n      <Paper className={classes.paper} elevation={0} />,\n      <img src={testimage2} alt=\"\" width=\"110px\" />,\n      <Paper className={classes.paper} elevation={0} />,\n      <img src={testimage1} alt=\"\" width=\"110px\" />,\n      <Paper className={classes.paper} elevation={0} />,\n      <img src={testimage3} alt=\"\" width=\"110px\" />,\n      <ExploreButton changeMode={changeMode} />,\n    ];\n\n  const row = items.map((item, index) => (\n    <React.Fragment key={index}>\n      <Grid item>{item}</Grid>\n    </React.Fragment>\n  ));\n\n  React.useEffect(() => {\n    setToggle(!isToggled);\n    setDisplayShuffle(shuffle(row));\n  }, [shuffle, row, isToggled]);\n\n  if (galleryMode) {\n    return <ExploreMode />;\n  } else {\n    return (\n      <div>\n        <br />\n        <Intro in={mount} />\n        <animated.div style={fade}>\n          <div className={classes.root}>\n            <Box\n              display=\"flex\"\n              flexdirection=\"row\"\n              flexWrap=\"wrap\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              maxWidth=\"800px\"\n              minWidth=\"100px\"\n              margin=\"0 auto\"\n            >\n              <Grid\n                container\n                display=\"flex\"\n                flexDirection=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n                spacing={10}\n              >\n                {displayShuffle}\n              </Grid>\n            </Box>\n          </div>\n        </animated.div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}