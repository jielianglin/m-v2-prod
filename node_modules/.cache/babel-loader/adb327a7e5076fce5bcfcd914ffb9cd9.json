{"ast":null,"code":"var _jsxFileName = \"/Users/jielianglin/Desktop/projects/m-v2-prod/src/components/upload/annotation/P5Mold.js\";\nimport React from 'react';\nimport Sketch from 'react-p5';\nimport Sample from './sample/Sample.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar penSize = 5;\nvar penState = 0;\nvar init;\nvar x, y, px, py;\nvar paths = [];\nvar currentPath = [];\nvar r;\nvar colorPicker;\nvar img;\nvar pg;\nexport default function Vector() {\n  const preload = p5 => {\n    img = p5.loadImage(`${Sample}`);\n  };\n\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(600, 600).parent(canvasParentRef);\n    pg = p5.createGraphics(600, 600);\n    colorPicker = p5.createColorPicker('#ed225d');\n    colorPicker.position(p5.width / 3, p5.height - 20);\n  };\n\n  const draw = p5 => {\n    x = p5.mouseX;\n    y = p5.mouseY;\n    px = p5.pmouseX;\n    py = p5.pmouseY;\n    r = p5.width * 0.25;\n    p5.stroke(colorPicker.color());\n    p5.image(img, 0, 0);\n    pg.strokeWeight(penSize);\n    p5.fill(255, 0, 0, 225);\n\n    if (p5.mouseIsPressed) {}\n\n    p5.beginShape();\n    p5.vertex(0, -r);\n    p5.quadraticVertex(r, -r, r, 0);\n    p5.quadraticVertex(r, -r, 0, r);\n    p5.quadraticVertex(-r, r, -r, 0);\n    p5.quadraticVertex(-r, -r, 0, -r);\n    p5.endShape();\n    p5.image(pg, 0, 0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Sketch, {\n    preload: preload,\n    setup: setup,\n    draw: draw\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 13\n  }, this);\n}\n_c = Vector;\n\nvar _c;\n\n$RefreshReg$(_c, \"Vector\");","map":{"version":3,"sources":["/Users/jielianglin/Desktop/projects/m-v2-prod/src/components/upload/annotation/P5Mold.js"],"names":["React","Sketch","Sample","penSize","penState","init","x","y","px","py","paths","currentPath","r","colorPicker","img","pg","Vector","preload","p5","loadImage","setup","canvasParentRef","createCanvas","parent","createGraphics","createColorPicker","position","width","height","draw","mouseX","mouseY","pmouseX","pmouseY","stroke","color","image","strokeWeight","fill","mouseIsPressed","beginShape","vertex","quadraticVertex","endShape"],"mappings":"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","sourcesContent":["import React from 'react'; \n\nimport Sketch from 'react-p5';\nimport Sample from './sample/Sample.jpg';\n\nvar penSize = 5;\nvar penState = 0;\n\nvar init; \nvar x, y, px, py;\nvar paths = [];\nvar currentPath = [];\n\nvar r; \n\nvar colorPicker;\n\nvar img; \nvar pg; \n\nexport default function Vector(){\n\n    const preload = p5 => {\n    img = p5.loadImage(`${Sample}`);\n    }\n\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(600,600).parent(canvasParentRef);\n        pg = p5.createGraphics(600, 600); \n        colorPicker = p5.createColorPicker('#ed225d');\n        colorPicker.position(p5.width/3, p5.height-20);\n        \n        \n        \n\n\n    }\n\n    const draw = p5 => {\n        x = p5.mouseX;\n        y = p5.mouseY;\n        px = p5.pmouseX;\n        py = p5.pmouseY; \n        r = p5.width * 0.25;\n\n        p5.stroke(colorPicker.color()); \n        p5.image(img, 0, 0);\n        pg.strokeWeight(penSize); \n        \n        p5.fill(255, 0, 0, 225);\n\n            if (p5.mouseIsPressed){\n                    \n\n            }\n            p5.beginShape();\n                p5.vertex(0, -r);\n                p5.quadraticVertex(r, -r, r, 0);\n                p5.quadraticVertex(r, -r, 0, r);\n                p5.quadraticVertex(-r, r, -r, 0);\n                p5.quadraticVertex(-r, -r, 0, -r);  \n            p5.endShape();\n            p5.image(pg, 0, 0);\n    }\n\n     return <Sketch preload={preload} setup={setup} draw={draw} />  \n    }"]},"metadata":{},"sourceType":"module"}