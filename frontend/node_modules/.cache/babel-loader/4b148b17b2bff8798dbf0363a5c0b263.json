{"ast":null,"code":"var _jsxFileName = \"/Users/jielianglin/Desktop/projects/m-v2-prod/frontend/src/components/explore/Searchbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport SearchBar from \"material-ui-search-bar\";\nimport { Typography, Chip, Avatar } from \"@material-ui/core\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { CarouselProvider, Slider, Slide, ButtonBack, ButtonNext, DotGroup, Image } from 'pure-react-carousel';\nimport 'pure-react-carousel/dist/react-carousel.es.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    backgroundColor: \"transparent\",\n    boxShadow: theme.shadows[5],\n    outline: \"none\",\n    borderRadius: \"5px\"\n  },\n  modal: {\n    display: \"flex\",\n    padding: \"none\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n}));\nexport default function Search() {\n  _s();\n\n  const classes = useStyles();\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  function onSubmit(e) {\n    e.preventDefault();\n    setQuery(search);\n    console.log(search);\n  }\n\n  function onSearch(e) {\n    setSearch(e.target.value);\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch(`http://127.0.0.1:8000/images?tag=${query}`);\n        const json = await response.json();\n        console.log({\n          json\n        });\n        setResults(json);\n        handleOpen();\n      } catch (error) {}\n    }\n\n    if (query !== \"\") {\n      console.log(\"the data does not exist\");\n      fetchData();\n    }\n  }, [query]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      placeholder: \"Search a tag about migration\",\n      value: search,\n      onChange: onSearch,\n      onRequestSearch: onSubmit,\n      cancelOnEscape: \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      className: classes.modal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"8z3ZhGZNq3Mdh1waJeI6cmxSSIY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/jielianglin/Desktop/projects/m-v2-prod/frontend/src/components/explore/Searchbar.js"],"names":["React","useState","useEffect","SearchBar","Typography","Chip","Avatar","Modal","CarouselProvider","Slider","Slide","ButtonBack","ButtonNext","DotGroup","Image","makeStyles","useStyles","theme","paper","backgroundColor","boxShadow","shadows","outline","borderRadius","modal","display","padding","alignItems","justifyContent","Search","classes","search","setSearch","query","setQuery","results","setResults","open","setOpen","handleOpen","handleClose","onSubmit","e","preventDefault","console","log","onSearch","target","value","fetchData","response","fetch","json","error"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SearchBar from \"material-ui-search-bar\";\nimport { Typography, Chip, Avatar } from \"@material-ui/core\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { CarouselProvider, Slider, Slide, ButtonBack, ButtonNext, DotGroup, Image } from 'pure-react-carousel';\nimport 'pure-react-carousel/dist/react-carousel.es.css';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    backgroundColor: \"transparent\",\n    boxShadow: theme.shadows[5],\n    outline: \"none\",\n    borderRadius: \"5px\",\n  },\n  modal: {\n    display: \"flex\",\n    padding: \"none\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nexport default function Search() {\n  const classes = useStyles();\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  function onSubmit(e) {\n    e.preventDefault();\n    setQuery(search);\n    console.log(search);\n  }\n\n  function onSearch(e) {\n    setSearch(e.target.value);\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch(\n          `http://127.0.0.1:8000/images?tag=${query}`\n        );\n        const json = await response.json();\n        console.log({ json });\n        setResults(json);\n        handleOpen();\n      } catch (error) { }\n    }\n\n    if (query !== \"\") {\n      console.log(\"the data does not exist\");\n      fetchData();\n    }\n  }, [query]);\n\n  return (\n    <div>\n      <SearchBar\n        placeholder='Search a tag about migration'\n        value={search}\n        onChange={onSearch}\n        onRequestSearch={onSubmit}\n        cancelOnEscape=\"true\"\n      />\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        className={classes.modal}\n      >\n        {/* <CarouselProvider\n          naturalSlideWidth={100}\n          naturalSlideHeight={125}\n          totalSlides={Object.keys(data.json[i]).length}\n        >\n          {/* <Slider className=\"slider\">\n\n            {/* {results.map((item) => (\n              <div>\n                <div key={item.id} className=\"paper-slider\">\n                  <div className=\"slide\">\n                    <Slide index={item.id}>\n                      <Image\n                        src={`http://localhost:8000/images/${item.id}.jpeg`}\n                        alt=\"img-result\"\n                      // onClick={handleOpen}\n                      />\n\n                    </Slide>\n                    <DotGroup />\n                  </div>\n                  <div className=\"caption\">\n                    <Typography\n                      variant=\"h6\"\n                      component=\"p\"\n                      className=\"caption-wrap\"\n                    >\n                      <i>\"{item.caption}\"</i>\n                    </Typography>\n                  </div>\n\n                  <div className=\"mtag-wrap\">\n                    <Typography className=\"mtag-label\">\n                      Our tags:\n                    </Typography>\n                    {item.tags.map((posttag) => {\n                      console.log(posttag.tag);\n                      return (\n                        <Chip\n                          className=\"chip1\"\n                          avatar={\n                            <Avatar>\n                              <AiOutlineNumber />\n                            </Avatar>\n                          }\n                          key={posttag.id}\n                          label={posttag.tag}\n                          component=\"a\"\n                          href=\"#chip\"\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          clickable\n                        />\n                      );\n                    })} */}\n        {/* </div> */}\n        {/* <div className=\"ntag-wrap\">\n                    <Typography className=\"ntag-label\">\n                      AI tags (from ImageNet):\n                    </Typography> */}\n\n        {/* {item.ai_tags.map((posttag) => {\n                      console.log(posttag.tag);\n                      return (\n                        <Chip\n                          className=\"chip2\"\n                          style={{ color: \"#668389\" }}\n                          avatar={\n                            <Avatar style={{ background: \"#668389\" }}>\n                              <AiOutlineNumber style={{ color: \"white\" }} />\n                            </Avatar>\n                          }\n                          key={posttag.id}\n                          label={posttag.tag}\n                          component=\"a\"\n                          href=\"#chip\"\n                          clickable\n                        />\n                      );\n                    })}\n                  </div> */}\n        {/* <div>\n                    {item.ai_tags.map((aiitem) => {\n                      return (\n                        <MatchBar\n                          match={parseFloat(aiitem.confidence)}\n                          aitag={aiitem.tag}\n                        />\n                      );\n                    })}\n                  </div> */}\n        {/* </div>\n              </div>\n            ))} */}\n        {/* </Slider> */}\n        {/* <ButtonBack>Back</ButtonBack>\n          <ButtonNext>Next</ButtonNext>\n        </CarouselProvider> */}\n      </Modal>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}