{"ast":null,"code":"var _jsxFileName = \"/Users/jielianglin/Desktop/projects/m-v2-prod/frontend/src/components/explore/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport image1 from './Gallery/image1/image1.jpg';\nimport image2 from './Gallery/image2/image2.jpg';\nimport image3 from './Gallery/image3/image3.png';\nimport ImageList from '@material-ui/core/ImageList';\nimport ImageListItem from '@material-ui/core/ImageListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper\n  },\n  imageList: {\n    width: 500,\n    height: 450\n  }\n}));\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n    color: \"#2B4466\",\n    backgroundColor: \"#E6DAC8\"\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst DeleteButton = withStyles({\n  root: {\n    background: '#2B4466',\n    borderRadius: 3,\n    border: 0,\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    boxShadow: '0 3px 5px 2px #b4beb7'\n  },\n  label: {\n    textTransform: 'capitalize'\n  }\n})(Button);\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(MuiDialogTitle, {\n    disableTypography: true,\n    className: classes.root,\n    ...other,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), onClose ? /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"close\",\n      className: classes.closeButton,\n      onClick: onClose,\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n    backgroundColor: \"#E6DAC8\"\n  }\n}))(MuiDialogContent);\nexport default function Dashboard() {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const classes = useStyles(); // const [select, setSelect] = React.useState(false);\n  // const [gallery, setGallery] = React.useState(\"\");\n  // const selectImage = (onClick) => {\n  //     setSelect(true);\n  // }\n\n  const images = [{\n    src: `${image1}`\n  }, {\n    src: `${image2}`\n  }, {\n    src: `${image3}`\n  }]; // setGallery(images);\n  // const deleteHandler = () => {\n  //     if (select === true) {\n  //         setGallery(images.filter(el => el.src !== images.src))\n  //     }\n  //     return images;\n  // }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClickOpen,\n      children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {\n        style: {\n          fontSize: 80,\n          color: \"#FFFFFF\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      onClose: handleClose,\n      \"aria-labelledby\": \"simple-dialog-title\",\n      open: open,\n      maxWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle //newTitle={newTitle}\n      , {\n        id: \"customized-dialog-title\",\n        onClose: handleClose,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"Manage my pictures\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.root,\n          children: /*#__PURE__*/_jsxDEV(ImageList, {\n            rowHeight: 160,\n            className: classes.imageList,\n            cols: 3,\n            children: images.map(image => /*#__PURE__*/_jsxDEV(ImageListItem, {\n              cols: image.cols || 1,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: image.src,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 37\n              }, this)\n            }, image.src, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(DeleteButton, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h8\",\n            children: \"DELETE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Dashboard, \"sAdzNhf/eEVWcoR6sLHcRgUAoMI=\", false, function () {\n  return [useStyles];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/jielianglin/Desktop/projects/m-v2-prod/frontend/src/components/explore/Dashboard.js"],"names":["React","AccountCircleIcon","Button","Dialog","MuiDialogTitle","MuiDialogContent","Typography","IconButton","CloseIcon","withStyles","makeStyles","image1","image2","image3","ImageList","ImageListItem","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","imageList","width","height","styles","margin","padding","spacing","color","closeButton","position","right","top","grey","DeleteButton","borderRadius","border","boxShadow","label","textTransform","DialogTitle","props","children","classes","onClose","other","DialogContent","Dashboard","open","setOpen","useState","images","src","handleClickOpen","handleClose","fontSize","map","image","cols"],"mappings":"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","sourcesContent":["import React from 'react';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport image1 from './Gallery/image1/image1.jpg';\nimport image2 from './Gallery/image2/image2.jpg';\nimport image3 from './Gallery/image3/image3.png';\n\nimport ImageList from '@material-ui/core/ImageList';\nimport ImageListItem from '@material-ui/core/ImageListItem';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n    },\n    imageList: {\n        width: 500,\n        height: 450,\n    },\n}));\n\nconst styles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n        color: \"#2B4466\",\n        backgroundColor: \"#E6DAC8\",\n    },\n    closeButton: {\n        position: \"absolute\",\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n\n    },\n});\n\nconst DeleteButton = withStyles({\n    root: {\n        background: '#2B4466',\n        borderRadius: 3,\n        border: 0,\n        color: 'white',\n        height: 48,\n        padding: '0 30px',\n        boxShadow: '0 3px 5px 2px #b4beb7',\n    },\n    label: {\n        textTransform: 'capitalize',\n    },\n})(Button);\n\nconst DialogTitle = withStyles(styles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton\n                    aria-label=\"close\"\n                    className={classes.closeButton}\n                    onClick={onClose}\n                >\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst DialogContent = withStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n        backgroundColor: \"#E6DAC8\"\n    },\n}))(MuiDialogContent);\n\nexport default function Dashboard() {\n    const [open, setOpen] = React.useState(false);\n    const classes = useStyles();\n    // const [select, setSelect] = React.useState(false);\n    // const [gallery, setGallery] = React.useState(\"\");\n\n    // const selectImage = (onClick) => {\n    //     setSelect(true);\n    // }\n\n    const images = [\n        {\n            src: `${image1}`,\n\n        },\n        {\n            src: `${image2}`,\n\n\n        },\n        {\n            src: `${image3}`,\n\n        },\n    ]\n\n    // setGallery(images);\n\n    // const deleteHandler = () => {\n    //     if (select === true) {\n    //         setGallery(images.filter(el => el.src !== images.src))\n    //     }\n    //     return images;\n    // }\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    }\n    const handleClose = () => {\n        setOpen(false);\n\n    };\n\n    return (\n        <div>\n            <Button onClick={handleClickOpen}>\n                <AccountCircleIcon style={{ fontSize: 80, color: \"#FFFFFF\" }} />\n            </Button>\n            <Dialog\n                onClose={handleClose}\n                aria-labelledby=\"simple-dialog-title\"\n                open={open}\n\n                maxWidth=\"md\"\n                fullWidth={true}\n            >\n                <DialogTitle\n                    //newTitle={newTitle}\n                    id=\"customized-dialog-title\"\n                    onClose={handleClose}\n                >\n                    <Typography variant=\"h5\">Manage my pictures</Typography>\n                </DialogTitle>\n                <DialogContent dividers>\n                    <div className={classes.root}>\n                        <ImageList rowHeight={160} className={classes.imageList} cols={3}>\n                            {images.map((image) => (\n                                <ImageListItem key={image.src} cols={image.cols || 1}>\n                                    <img src={image.src} alt=\"\" />\n                                </ImageListItem>\n                            ))}\n                        </ImageList>\n                    </div>\n                </DialogContent>\n\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    <DeleteButton >\n                        <Typography variant=\"h8\">\n                            DELETE\n                        </Typography>\n                    </DeleteButton>\n                </div>\n\n\n            </Dialog>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}