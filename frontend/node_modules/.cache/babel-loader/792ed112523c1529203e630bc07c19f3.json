{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\n\nconst useIntro = () => {\n  _s();\n\n  const storage = window.localStorage;\n  const currTimestamp = Date.now();\n  const timestamp = JSON.parse(storage.getItem('timestamp') || '1000');\n  const timeLimit = 2 * 60 * 60 * 1000; // 2 hours\n\n  const hasTimePassed = currTimestamp - timestamp > timeLimit;\n  useEffect(() => {\n    hasTimePassed ? storage.setItem('timestamp', currTimestamp.toString()) : storage.setItem('timestamp', timestamp.toString());\n  }, []);\n  return hasTimePassed;\n};\n\n_s(useIntro, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nexport default useIntro;","map":{"version":3,"sources":["/Users/jielianglin/Desktop/projects/m-v2-prod/frontend/src/components/landing/SessionStorage.js"],"names":["useEffect","useIntro","storage","window","localStorage","currTimestamp","Date","now","timestamp","JSON","parse","getItem","timeLimit","hasTimePassed","setItem","toString"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAMC,OAAO,GAAGC,MAAM,CAACC,YAAvB;AACA,QAAMC,aAAa,GAAGC,IAAI,CAACC,GAAL,EAAtB;AACA,QAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWR,OAAO,CAACS,OAAR,CAAgB,WAAhB,KAAgC,MAA3C,CAAlB;AAEA,QAAMC,SAAS,GAAG,IAAI,EAAJ,GAAS,EAAT,GAAc,IAAhC,CANmB,CAMmB;;AAEtC,QAAMC,aAAa,GAAGR,aAAa,GAAGG,SAAhB,GAA4BI,SAAlD;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,aAAa,GACTX,OAAO,CAACY,OAAR,CAAgB,WAAhB,EAA6BT,aAAa,CAACU,QAAd,EAA7B,CADS,GAGTb,OAAO,CAACY,OAAR,CAAgB,WAAhB,EAA6BN,SAAS,CAACO,QAAV,EAA7B,CAHJ;AAIH,GALQ,EAKN,EALM,CAAT;AAOA,SAAOF,aAAP;AACH,CAlBD;;GAAMZ,Q;;AAoBN,eAAeA,QAAf","sourcesContent":["import { useEffect } from 'react';\n\nconst useIntro = () => {\n\n    const storage = window.localStorage;\n    const currTimestamp = Date.now();\n    const timestamp = JSON.parse(storage.getItem('timestamp') || '1000');\n\n    const timeLimit = 2 * 60 * 60 * 1000; // 2 hours\n\n    const hasTimePassed = currTimestamp - timestamp > timeLimit;\n\n    useEffect(() => {\n        hasTimePassed ?\n            storage.setItem('timestamp', currTimestamp.toString())\n            :\n            storage.setItem('timestamp', timestamp.toString());\n    }, []);\n\n    return hasTimePassed;\n};\n\nexport default useIntro;"]},"metadata":{},"sourceType":"module"}