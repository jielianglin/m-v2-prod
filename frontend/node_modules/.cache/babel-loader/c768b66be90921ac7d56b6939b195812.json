{"ast":null,"code":"var _jsxFileName = \"/Users/jielianglin/Desktop/projects/m-v2-prod/frontend/src/components/landing/DesertVisualization.js\";\nimport React from 'react';\nimport Sketch from 'react-p5';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar t;\nvar n;\nvar alpha = [4, 5, 6, 7, 8, 9, 14, 18, 19]; //  for (var n = 1; n <= 12; n++) {\n//   alpha.push(n);\n//   alpha.splice(alpha.indexOf(n), 0);\n//  }\n\nvar random;\nexport default function DesertVisualization() {\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(p5.windowWidth, p5.windowHeight);\n    random = Math.floor(Math.random() * alpha.length);\n    console.log(random);\n    p5.stroke(230, 218, 200);\n    p5.fill(230, 218, 200, random);\n    t = 0;\n  };\n\n  const draw = p5 => {\n    var x1 = p5.width * p5.noise(t + 15);\n    var x2 = p5.width * p5.noise(t + 25);\n    var x3 = p5.width * p5.noise(t + 35);\n    var x4 = p5.width * p5.noise(t + 45);\n    var y1 = p5.height * p5.noise(t + 55);\n    var y2 = p5.height * p5.noise(t + 65);\n    var y3 = p5.height * p5.noise(t + 75);\n    var y4 = p5.height * p5.noise(t + 85);\n    p5.bezier(x1, y1, x2, y2, x3, y3, x4, y4);\n    t += 0.0025; // clear the background every 500 frames using mod (%) operator\n\n    if (p5.frameCount % 400 === 0) {\n      p5.noLoop();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Sketch, {\n    setup: setup,\n    draw: draw\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 10\n  }, this);\n}\n_c = DesertVisualization;\n\nvar _c;\n\n$RefreshReg$(_c, \"DesertVisualization\");","map":{"version":3,"sources":["/Users/jielianglin/Desktop/projects/m-v2-prod/frontend/src/components/landing/DesertVisualization.js"],"names":["React","Sketch","t","n","alpha","random","DesertVisualization","setup","p5","canvasParentRef","createCanvas","windowWidth","windowHeight","Math","floor","length","console","log","stroke","fill","draw","x1","width","noise","x2","x3","x4","y1","height","y2","y3","y4","bezier","frameCount","noLoop"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,IAAIC,CAAJ;AAEA,IAAIC,CAAJ;AACA,IAAIC,KAAK,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,EAAnB,EAAuB,EAAvB,EAA2B,EAA3B,CAAZ,C,CACA;AACA;AACA;AACA;;AACA,IAAIC,MAAJ;AAGA,eAAe,SAASC,mBAAT,GAA+B;AAE5C,QAAMC,KAAK,GAAG,CAACC,EAAD,EAAKC,eAAL,KAAyB;AACrCD,IAAAA,EAAE,CAACE,YAAH,CAAgBF,EAAE,CAACG,WAAnB,EAAgCH,EAAE,CAACI,YAAnC;AAEAP,IAAAA,MAAM,GAAGQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACR,MAAL,KAAgBD,KAAK,CAACW,MAAjC,CAAT;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAZ;AACAG,IAAAA,EAAE,CAACU,MAAH,CAAU,GAAV,EAAe,GAAf,EAAoB,GAApB;AACAV,IAAAA,EAAE,CAACW,IAAH,CAAQ,GAAR,EAAa,GAAb,EAAkB,GAAlB,EAAuBd,MAAvB;AACAH,IAAAA,CAAC,GAAG,CAAJ;AACD,GARD;;AAUA,QAAMkB,IAAI,GAAGZ,EAAE,IAAI;AAEjB,QAAIa,EAAE,GAAGb,EAAE,CAACc,KAAH,GAAWd,EAAE,CAACe,KAAH,CAASrB,CAAC,GAAG,EAAb,CAApB;AACA,QAAIsB,EAAE,GAAGhB,EAAE,CAACc,KAAH,GAAWd,EAAE,CAACe,KAAH,CAASrB,CAAC,GAAG,EAAb,CAApB;AACA,QAAIuB,EAAE,GAAGjB,EAAE,CAACc,KAAH,GAAWd,EAAE,CAACe,KAAH,CAASrB,CAAC,GAAG,EAAb,CAApB;AACA,QAAIwB,EAAE,GAAGlB,EAAE,CAACc,KAAH,GAAWd,EAAE,CAACe,KAAH,CAASrB,CAAC,GAAG,EAAb,CAApB;AACA,QAAIyB,EAAE,GAAGnB,EAAE,CAACoB,MAAH,GAAYpB,EAAE,CAACe,KAAH,CAASrB,CAAC,GAAG,EAAb,CAArB;AACA,QAAI2B,EAAE,GAAGrB,EAAE,CAACoB,MAAH,GAAYpB,EAAE,CAACe,KAAH,CAASrB,CAAC,GAAG,EAAb,CAArB;AACA,QAAI4B,EAAE,GAAGtB,EAAE,CAACoB,MAAH,GAAYpB,EAAE,CAACe,KAAH,CAASrB,CAAC,GAAG,EAAb,CAArB;AACA,QAAI6B,EAAE,GAAGvB,EAAE,CAACoB,MAAH,GAAYpB,EAAE,CAACe,KAAH,CAASrB,CAAC,GAAG,EAAb,CAArB;AAKAM,IAAAA,EAAE,CAACwB,MAAH,CAAUX,EAAV,EAAcM,EAAd,EAAkBH,EAAlB,EAAsBK,EAAtB,EAA0BJ,EAA1B,EAA8BK,EAA9B,EAAkCJ,EAAlC,EAAsCK,EAAtC;AAEA7B,IAAAA,CAAC,IAAI,MAAL,CAhBiB,CAmBjB;;AACA,QAAIM,EAAE,CAACyB,UAAH,GAAgB,GAAhB,KAAwB,CAA5B,EAA+B;AAC7BzB,MAAAA,EAAE,CAAC0B,MAAH;AACD;AACF,GAvBD;;AAyBA,sBAAO,QAAC,MAAD;AAAQ,IAAA,KAAK,EAAE3B,KAAf;AAAsB,IAAA,IAAI,EAAEa;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AAED;KAvCuBd,mB","sourcesContent":["import React from 'react';\nimport Sketch from 'react-p5';\n\nvar t;\n\nvar n;\nvar alpha = [4, 5, 6, 7, 8, 9, 14, 18, 19];\n//  for (var n = 1; n <= 12; n++) {\n//   alpha.push(n);\n//   alpha.splice(alpha.indexOf(n), 0);\n//  }\nvar random;\n\n\nexport default function DesertVisualization() {\n\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(p5.windowWidth, p5.windowHeight);\n\n    random = Math.floor(Math.random() * alpha.length);\n    console.log(random);\n    p5.stroke(230, 218, 200);\n    p5.fill(230, 218, 200, random);\n    t = 0;\n  }\n\n  const draw = p5 => {\n\n    var x1 = p5.width * p5.noise(t + 15);\n    var x2 = p5.width * p5.noise(t + 25);\n    var x3 = p5.width * p5.noise(t + 35);\n    var x4 = p5.width * p5.noise(t + 45);\n    var y1 = p5.height * p5.noise(t + 55);\n    var y2 = p5.height * p5.noise(t + 65);\n    var y3 = p5.height * p5.noise(t + 75);\n    var y4 = p5.height * p5.noise(t + 85);\n\n\n\n\n    p5.bezier(x1, y1, x2, y2, x3, y3, x4, y4);\n\n    t += 0.0025\n      ;\n\n    // clear the background every 500 frames using mod (%) operator\n    if (p5.frameCount % 400 === 0) {\n      p5.noLoop();\n    }\n  }\n\n  return <Sketch setup={setup} draw={draw} />\n\n}"]},"metadata":{},"sourceType":"module"}