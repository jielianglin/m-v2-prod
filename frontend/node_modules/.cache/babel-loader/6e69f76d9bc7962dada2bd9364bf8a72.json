{"ast":null,"code":"var _jsxFileName = \"/Users/jielianglin/Desktop/projects/m-v2-prod/frontend/src/components/landing/DesertVisualization.js\";\nimport React from 'react';\nimport Sketch from 'react-p5';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar t;\nvar alpha = [4, 5, 6, 7, 8, 9, 14, 18, 19];\nexport default function DesertVisualization() {\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(p5.windowWidth, p5.windowHeight);\n    var alpha_value = alpha[Math.floor(Math.random() * alpha.length)];\n    console.log(alpha_value);\n    p5.stroke(230, 218, 200, 14);\n    p5.fill(230, 218, 200, alpha_value);\n    t = 0;\n  };\n\n  const draw = p5 => {\n    // var x1 = p5.width * p5.noise(t + 15);\n    // var x2 = p5.width * p5.noise(t + 25);\n    // var x3 = p5.width * p5.noise(t + 35);\n    // var x4 = p5.width * p5.noise(t + 45);\n    // var y1 = p5.height * p5.noise(t + 55);\n    // var y2 = p5.height * p5.noise(t + 65);\n    // var y3 = p5.height * p5.noise(t + 75);\n    // var y4 = p5.height * p5.noise(t + 85);\n    var x1 = p5.width * p5.noise(t + 25);\n    var x2 = p5.width * p5.noise(t + 35);\n    var x3 = p5.width * p5.noise(t + 45);\n    var x4 = p5.width * p5.noise(t + 55);\n    var y1 = p5.height * p5.noise(t + 65);\n    var y2 = p5.height * p5.noise(t + 75);\n    var y3 = p5.height * p5.noise(t + 85);\n    var y4 = p5.height * p5.noise(t + 95);\n    p5.bezier(x1, y1, x2, y2, x3, y3, x4, y4);\n    t += 0.002; // clear the background every 500 frames using mod (%) operator\n\n    if (p5.frameCount % 400 === 0) {\n      p5.noLoop();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Sketch, {\n    setup: setup,\n    draw: draw\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n}\n_c = DesertVisualization;\n\nvar _c;\n\n$RefreshReg$(_c, \"DesertVisualization\");","map":{"version":3,"sources":["/Users/jielianglin/Desktop/projects/m-v2-prod/frontend/src/components/landing/DesertVisualization.js"],"names":["React","Sketch","t","alpha","DesertVisualization","setup","p5","canvasParentRef","createCanvas","windowWidth","windowHeight","alpha_value","Math","floor","random","length","console","log","stroke","fill","draw","x1","width","noise","x2","x3","x4","y1","height","y2","y3","y4","bezier","frameCount","noLoop"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,IAAIC,CAAJ;AAEA,IAAIC,KAAK,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,EAAnB,EAAuB,EAAvB,EAA2B,EAA3B,CAAZ;AAIA,eAAe,SAASC,mBAAT,GAA+B;AAE5C,QAAMC,KAAK,GAAG,CAACC,EAAD,EAAKC,eAAL,KAAyB;AACrCD,IAAAA,EAAE,CAACE,YAAH,CAAgBF,EAAE,CAACG,WAAnB,EAAgCH,EAAE,CAACI,YAAnC;AAEA,QAAIC,WAAW,GAAGR,KAAK,CAACS,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBX,KAAK,CAACY,MAAjC,CAAD,CAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AACAL,IAAAA,EAAE,CAACY,MAAH,CAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,EAAzB;AACAZ,IAAAA,EAAE,CAACa,IAAH,CAAQ,GAAR,EAAa,GAAb,EAAkB,GAAlB,EAAuBR,WAAvB;AACAT,IAAAA,CAAC,GAAG,CAAJ;AACD,GARD;;AAUA,QAAMkB,IAAI,GAAGd,EAAE,IAAI;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,QAAIe,EAAE,GAAGf,EAAE,CAACgB,KAAH,GAAWhB,EAAE,CAACiB,KAAH,CAASrB,CAAC,GAAG,EAAb,CAApB;AACA,QAAIsB,EAAE,GAAGlB,EAAE,CAACgB,KAAH,GAAWhB,EAAE,CAACiB,KAAH,CAASrB,CAAC,GAAG,EAAb,CAApB;AACA,QAAIuB,EAAE,GAAGnB,EAAE,CAACgB,KAAH,GAAWhB,EAAE,CAACiB,KAAH,CAASrB,CAAC,GAAG,EAAb,CAApB;AACA,QAAIwB,EAAE,GAAGpB,EAAE,CAACgB,KAAH,GAAWhB,EAAE,CAACiB,KAAH,CAASrB,CAAC,GAAG,EAAb,CAApB;AACA,QAAIyB,EAAE,GAAGrB,EAAE,CAACsB,MAAH,GAAYtB,EAAE,CAACiB,KAAH,CAASrB,CAAC,GAAG,EAAb,CAArB;AACA,QAAI2B,EAAE,GAAGvB,EAAE,CAACsB,MAAH,GAAYtB,EAAE,CAACiB,KAAH,CAASrB,CAAC,GAAG,EAAb,CAArB;AACA,QAAI4B,EAAE,GAAGxB,EAAE,CAACsB,MAAH,GAAYtB,EAAE,CAACiB,KAAH,CAASrB,CAAC,GAAG,EAAb,CAArB;AACA,QAAI6B,EAAE,GAAGzB,EAAE,CAACsB,MAAH,GAAYtB,EAAE,CAACiB,KAAH,CAASrB,CAAC,GAAG,EAAb,CAArB;AAGAI,IAAAA,EAAE,CAAC0B,MAAH,CAAUX,EAAV,EAAcM,EAAd,EAAkBH,EAAlB,EAAsBK,EAAtB,EAA0BJ,EAA1B,EAA8BK,EAA9B,EAAkCJ,EAAlC,EAAsCK,EAAtC;AAEA7B,IAAAA,CAAC,IAAI,KAAL,CAxBiB,CA2BjB;;AACA,QAAII,EAAE,CAAC2B,UAAH,GAAgB,GAAhB,KAAwB,CAA5B,EAA+B;AAC7B3B,MAAAA,EAAE,CAAC4B,MAAH;AACD;AACF,GA/BD;;AAiCA,sBAAO,QAAC,MAAD;AAAQ,IAAA,KAAK,EAAE7B,KAAf;AAAsB,IAAA,IAAI,EAAEe;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AAED;KA/CuBhB,mB","sourcesContent":["import React from 'react';\nimport Sketch from 'react-p5';\n\nvar t;\n\nvar alpha = [4, 5, 6, 7, 8, 9, 14, 18, 19];\n\n\n\nexport default function DesertVisualization() {\n\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(p5.windowWidth, p5.windowHeight);\n\n    var alpha_value = alpha[Math.floor(Math.random() * alpha.length)];\n    console.log(alpha_value);\n    p5.stroke(230, 218, 200, 14);\n    p5.fill(230, 218, 200, alpha_value);\n    t = 0;\n  }\n\n  const draw = p5 => {\n\n    // var x1 = p5.width * p5.noise(t + 15);\n    // var x2 = p5.width * p5.noise(t + 25);\n    // var x3 = p5.width * p5.noise(t + 35);\n    // var x4 = p5.width * p5.noise(t + 45);\n    // var y1 = p5.height * p5.noise(t + 55);\n    // var y2 = p5.height * p5.noise(t + 65);\n    // var y3 = p5.height * p5.noise(t + 75);\n    // var y4 = p5.height * p5.noise(t + 85);\n\n\n    var x1 = p5.width * p5.noise(t + 25);\n    var x2 = p5.width * p5.noise(t + 35);\n    var x3 = p5.width * p5.noise(t + 45);\n    var x4 = p5.width * p5.noise(t + 55);\n    var y1 = p5.height * p5.noise(t + 65);\n    var y2 = p5.height * p5.noise(t + 75);\n    var y3 = p5.height * p5.noise(t + 85);\n    var y4 = p5.height * p5.noise(t + 95);\n\n\n    p5.bezier(x1, y1, x2, y2, x3, y3, x4, y4);\n\n    t += 0.002\n      ;\n\n    // clear the background every 500 frames using mod (%) operator\n    if (p5.frameCount % 400 === 0) {\n      p5.noLoop();\n    }\n  }\n\n  return <Sketch setup={setup} draw={draw} />\n\n}"]},"metadata":{},"sourceType":"module"}