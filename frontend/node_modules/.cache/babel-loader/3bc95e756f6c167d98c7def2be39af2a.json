{"ast":null,"code":"var _jsxFileName = \"/Users/jielianglin/Desktop/projects/m-v2-prod/frontend/src/components/landing/WellBeingIconButton.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport wellBeingIcon from \"./icons/wellBeingIcon/wellBeingIcon.png\";\nimport Popover from \"@material-ui/core/Popover\";\nimport { makeStyles } from '@material-ui/core/styles'; // import Paper from '@material-ui/core/Paper';\n// import Typography from '@material-ui/core/Typography';\n// const useStyles = makeStyles((theme) => ({\n//     root: {\n//         display: 'flex',\n//         flexWrap: 'wrap',\n//         '& > *': {\n//             margin: theme.spacing(1),\n//             width: theme.spacing(14),\n//             height: theme.spacing(14),\n//         },\n//         paper: {\n//             padding: theme.spacing(2),\n//             textAlign: 'center',\n//         },\n//     },\n// }));\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  popover: {\n    pointerEvents: 'none'\n  },\n  paper: {\n    padding: theme.spacing(1),\n    background: 'transparent'\n  }\n}));\nexport default function WellBeingIcon(props) {\n  _s();\n\n  // const [wellBeingText, showWellBeingText] = React.useState(false);\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null); // const showText = () => {\n  //     showWellBeingText(true);\n  //     console.log('mouseover');\n  // }\n  // const showIcon = () => {\n  //     showWellBeingText(false);\n  //     console.log('mouseout');\n  // }\n\n  const showPopover = event => {\n    setAnchorEl(event.currentTarget);\n    console.log('popover');\n  };\n\n  const closePopover = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl); // if (wellBeingText) {\n  //     return (\n  //         <Button onClick={() => {\n  //             props.showWellBeingIconText();\n  //         }}>\n  //             <div className={classes.root}\n  //                 onMouseOut={showIcon}\n  //             >\n  //                 <Paper elevation={0} className={classes.paper}\n  //                     style={{\n  //                         display: \"flex\",\n  //                         justifyContent: \"center\",\n  //                         alignItems: \"center\",\n  //                         backgroundColor: \"transparent\"\n  //                     }}>\n  //                     <Typography variant=\"h6\"> Well-Being </Typography>\n  //                 </Paper>\n  //             </div>\n  //         </Button>\n  //     );\n  // } else {\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: wellBeingIcon,\n      alt: \"\",\n      width: \"130px\",\n      onMouseEnter: showPopover,\n      onMouseLeave: closePopover,\n      onClick: () => {\n        props.showWellBeingIconText();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      id: \"mouse-over-popover\",\n      className: classes.popover,\n      classes: {\n        paper: classes.paper\n      },\n      open: open,\n      anchorEl: anchorEl,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      onClose: closePopover,\n      disableRestoreFocus: true,\n      children: \"Well-being\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WellBeingIcon, \"vXA32r6EXukv831dcFOknrOnVCE=\", false, function () {\n  return [useStyles];\n});\n\n_c = WellBeingIcon;\n\nvar _c;\n\n$RefreshReg$(_c, \"WellBeingIcon\");","map":{"version":3,"sources":["/Users/jielianglin/Desktop/projects/m-v2-prod/frontend/src/components/landing/WellBeingIconButton.js"],"names":["React","Button","wellBeingIcon","Popover","makeStyles","useStyles","theme","popover","pointerEvents","paper","padding","spacing","background","WellBeingIcon","props","classes","anchorEl","setAnchorEl","useState","showPopover","event","currentTarget","console","log","closePopover","open","Boolean","showWellBeingIconText","vertical","horizontal"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,yCAA1B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACrCC,EAAAA,OAAO,EAAE;AACLC,IAAAA,aAAa,EAAE;AADV,GAD4B;AAIrCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADN;AAEHC,IAAAA,UAAU,EAAE;AAFT;AAJ8B,CAAZ,CAAD,CAA5B;AAUA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AACzC;AACA,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BjB,KAAK,CAACkB,QAAN,CAAe,IAAf,CAAhC,CAHyC,CAKzC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,QAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3BH,IAAAA,WAAW,CAACG,KAAK,CAACC,aAAP,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,GAHD;;AAKA,QAAMC,YAAY,GAAG,MAAM;AACvBP,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAIA,QAAMQ,IAAI,GAAGC,OAAO,CAACV,QAAD,CAApB,CAxByC,CA0BzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI;AAAA,4BACI;AAAK,MAAA,GAAG,EAAEd,aAAV;AACI,MAAA,GAAG,EAAC,EADR;AAEI,MAAA,KAAK,EAAC,OAFV;AAGI,MAAA,YAAY,EAAEiB,WAHlB;AAII,MAAA,YAAY,EAAEK,YAJlB;AAKI,MAAA,OAAO,EAAE,MAAM;AACXV,QAAAA,KAAK,CAACa,qBAAN;AACH;AAPL;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI,QAAC,OAAD;AACI,MAAA,EAAE,EAAC,oBADP;AAEI,MAAA,SAAS,EAAEZ,OAAO,CAACR,OAFvB;AAGI,MAAA,OAAO,EAAE;AACLE,QAAAA,KAAK,EAAEM,OAAO,CAACN;AADV,OAHb;AAMI,MAAA,IAAI,EAAEgB,IANV;AAOI,MAAA,QAAQ,EAAET,QAPd;AAQI,MAAA,YAAY,EAAE;AACVY,QAAAA,QAAQ,EAAE,QADA;AAEVC,QAAAA,UAAU,EAAE;AAFF,OARlB;AAYI,MAAA,eAAe,EAAE;AACbD,QAAAA,QAAQ,EAAE,KADG;AAEbC,QAAAA,UAAU,EAAE;AAFC,OAZrB;AAgBI,MAAA,OAAO,EAAEL,YAhBb;AAiBI,MAAA,mBAAmB,MAjBvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH;;GAjFuBX,a;UAEJR,S;;;KAFIQ,a","sourcesContent":["import React from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport wellBeingIcon from \"./icons/wellBeingIcon/wellBeingIcon.png\"\nimport Popover from \"@material-ui/core/Popover\";\nimport { makeStyles } from '@material-ui/core/styles';\n\n// import Paper from '@material-ui/core/Paper';\n// import Typography from '@material-ui/core/Typography';\n\n// const useStyles = makeStyles((theme) => ({\n//     root: {\n//         display: 'flex',\n//         flexWrap: 'wrap',\n//         '& > *': {\n//             margin: theme.spacing(1),\n//             width: theme.spacing(14),\n//             height: theme.spacing(14),\n//         },\n//         paper: {\n//             padding: theme.spacing(2),\n//             textAlign: 'center',\n//         },\n//     },\n// }));\n\nconst useStyles = makeStyles((theme) => ({\n    popover: {\n        pointerEvents: 'none',\n    },\n    paper: {\n        padding: theme.spacing(1),\n        background: 'transparent',\n    },\n}));\n\nexport default function WellBeingIcon(props) {\n    // const [wellBeingText, showWellBeingText] = React.useState(false);\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    // const showText = () => {\n    //     showWellBeingText(true);\n    //     console.log('mouseover');\n    // }\n\n    // const showIcon = () => {\n    //     showWellBeingText(false);\n    //     console.log('mouseout');\n    // }\n\n    const showPopover = (event) => {\n        setAnchorEl(event.currentTarget);\n        console.log('popover');\n    }\n\n    const closePopover = () => {\n        setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n\n    // if (wellBeingText) {\n    //     return (\n    //         <Button onClick={() => {\n    //             props.showWellBeingIconText();\n    //         }}>\n    //             <div className={classes.root}\n    //                 onMouseOut={showIcon}\n    //             >\n    //                 <Paper elevation={0} className={classes.paper}\n    //                     style={{\n    //                         display: \"flex\",\n    //                         justifyContent: \"center\",\n    //                         alignItems: \"center\",\n    //                         backgroundColor: \"transparent\"\n    //                     }}>\n\n    //                     <Typography variant=\"h6\"> Well-Being </Typography>\n    //                 </Paper>\n    //             </div>\n    //         </Button>\n    //     );\n    // } else {\n\n    return (\n        <div>\n            <img src={wellBeingIcon}\n                alt=\"\"\n                width=\"130px\"\n                onMouseEnter={showPopover}\n                onMouseLeave={closePopover}\n                onClick={() => {\n                    props.showWellBeingIconText();\n                }}\n            />\n            <Popover\n                id=\"mouse-over-popover\"\n                className={classes.popover}\n                classes={{\n                    paper: classes.paper,\n                }}\n                open={open}\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                onClose={closePopover}\n                disableRestoreFocus\n            >Well-being</Popover>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}