{"ast":null,"code":"var _jsxFileName = \"/Users/jielianglin/Desktop/projects/m-v2-prod/frontend/src/components/landing/DesertVisualization.js\";\nimport React from 'react';\nimport Sketch from 'react-p5';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar t;\nvar n;\nvar alpha = [];\n\nfor (var n = 1; n <= 18; n++) {\n  alpha.push(i);\n  alpha.splice(alpha.indexOf(n), 0);\n}\n\nvar random;\nvar i;\nvar noise = [];\n\nfor (var i = 1; i <= 100; i++) {\n  noise.push(i);\n  noise.splice(noise.indexOf(i), 0);\n}\n\nvar randomnoise;\nexport default function DesertVisualization() {\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(p5.windowWidth, p5.windowHeight);\n    random = Math.floor(Math.random() * alpha.length);\n    console.log(random);\n    p5.stroke(230, 218, 200);\n    p5.fill(230, 218, 200, random);\n    t = 0;\n  };\n\n  const draw = p5 => {\n    var x1 = p5.width * p5.noise(t + 15);\n    var x2 = p5.width * p5.noise(t + 25);\n    var x3 = p5.width * p5.noise(t + 35);\n    var x4 = p5.width * p5.noise(t + 45);\n    var y1 = p5.height * p5.noise(t + 55);\n    var y2 = p5.height * p5.noise(t + 65);\n    var y3 = p5.height * p5.noise(t + 75);\n    var y4 = p5.height * p5.noise(t + 85);\n    p5.bezier(x1, y1, x2, y2, x3, y3, x4, y4);\n    t += 0.0025; // clear the background every 500 frames using mod (%) operator\n\n    if (p5.frameCount % 400 === 0) {\n      p5.noLoop();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Sketch, {\n    setup: setup,\n    draw: draw\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n}\n_c = DesertVisualization;\n\nvar _c;\n\n$RefreshReg$(_c, \"DesertVisualization\");","map":{"version":3,"sources":["/Users/jielianglin/Desktop/projects/m-v2-prod/frontend/src/components/landing/DesertVisualization.js"],"names":["React","Sketch","t","n","alpha","push","i","splice","indexOf","random","noise","randomnoise","DesertVisualization","setup","p5","canvasParentRef","createCanvas","windowWidth","windowHeight","Math","floor","length","console","log","stroke","fill","draw","x1","width","x2","x3","x4","y1","height","y2","y3","y4","bezier","frameCount","noLoop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Sketch from 'react-p5';\n\nvar t;\n\nvar n;\nvar alpha = [];\nfor (var n = 1; n <= 18; n++) {\n  alpha.push(i);\n  alpha.splice(alpha.indexOf(n), 0);\n}\nvar random;\n\nvar i;\nvar noise = [];\nfor (var i = 1; i <= 100; i++) {\n  noise.push(i);\n  noise.splice(noise.indexOf(i), 0);\n}\nvar randomnoise;\n\nexport default function DesertVisualization() {\n\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(p5.windowWidth, p5.windowHeight);\n\n    random = Math.floor(Math.random() * alpha.length);\n    console.log(random);\n    p5.stroke(230, 218, 200);\n    p5.fill(230, 218, 200, random);\n    t = 0;\n  }\n\n  const draw = p5 => {\n\n    var x1 = p5.width * p5.noise(t + 15);\n    var x2 = p5.width * p5.noise(t + 25);\n    var x3 = p5.width * p5.noise(t + 35);\n    var x4 = p5.width * p5.noise(t + 45);\n    var y1 = p5.height * p5.noise(t + 55);\n    var y2 = p5.height * p5.noise(t + 65);\n    var y3 = p5.height * p5.noise(t + 75);\n    var y4 = p5.height * p5.noise(t + 85);\n\n\n\n\n    p5.bezier(x1, y1, x2, y2, x3, y3, x4, y4);\n\n    t += 0.0025\n      ;\n\n    // clear the background every 500 frames using mod (%) operator\n    if (p5.frameCount % 400 === 0) {\n      p5.noLoop();\n    }\n  }\n\n  return <Sketch setup={setup} draw={draw} />\n\n}"]},"metadata":{},"sourceType":"module"}